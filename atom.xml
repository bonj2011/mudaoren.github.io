<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>木道人</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-12-11T00:02:18.361Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>木道人</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>教育培养</title>
    <link href="http://yoursite.com/2018/12/11/%E6%95%99%E8%82%B2%E5%9F%B9%E5%85%BB/"/>
    <id>http://yoursite.com/2018/12/11/教育培养/</id>
    <published>2018-12-10T23:32:19.848Z</published>
    <updated>2018-12-11T00:02:18.361Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-树立正确的三观"><a href="#1-树立正确的三观" class="headerlink" title="1.树立正确的三观"></a>1.树立正确的三观</h2><p>　　具有正确的三观，就不容易受到心理上的伤害。</p><h2 id="2-设定正确的人生目标和理想"><a href="#2-设定正确的人生目标和理想" class="headerlink" title="2.设定正确的人生目标和理想"></a>2.设定正确的人生目标和理想</h2><p>　　具有正确的人生目标和理想，就容易做决断、不会受短期得失的影响。《追梦赤子心》中有句经典台词“有梦想的人才会忍受现实的生活”，有梦想的人会积极向上、受挫力强。</p><h2 id="3-为人生目标制定实施计划"><a href="#3-为人生目标制定实施计划" class="headerlink" title="3.为人生目标制定实施计划"></a>3.为人生目标制定实施计划</h2><h2 id="4-基于正确的三观，提供常规训练（情商、思维、技能）"><a href="#4-基于正确的三观，提供常规训练（情商、思维、技能）" class="headerlink" title="4.基于正确的三观，提供常规训练（情商、思维、技能）"></a>4.基于正确的三观，提供常规训练（情商、思维、技能）</h2><p>　　有了正确的三观和人生目标以后，还需要具备一定的常规技能才能逐步接近和实现目标。这当中最重要的当属情商、思维方式，其次就是处理问题的技能知识。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-树立正确的三观&quot;&gt;&lt;a href=&quot;#1-树立正确的三观&quot; class=&quot;headerlink&quot; title=&quot;1.树立正确的三观&quot;&gt;&lt;/a&gt;1.树立正确的三观&lt;/h2&gt;&lt;p&gt;　　具有正确的三观，就不容易受到心理上的伤害。&lt;/p&gt;
&lt;h2 id=&quot;2-设定正确
      
    
    </summary>
    
      <category term="教育" scheme="http://yoursite.com/categories/%E6%95%99%E8%82%B2/"/>
    
    
      <category term="教育" scheme="http://yoursite.com/tags/%E6%95%99%E8%82%B2/"/>
    
  </entry>
  
  <entry>
    <title>缓存设计</title>
    <link href="http://yoursite.com/2018/12/09/%E7%BC%93%E5%AD%98%E7%AD%96%E7%95%A5/"/>
    <id>http://yoursite.com/2018/12/09/缓存策略/</id>
    <published>2018-12-09T15:52:23.740Z</published>
    <updated>2018-12-11T23:31:16.206Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>互联网技术的发展遵循的一个基本原则：时间换空间或者空间换时间。</em></strong></p><p>　　缓存就是将数据存放在距离计算最快的地方，以加快处理速度。缓存也能有效隔离前端请求压力的传递，降低后端负载。然而事物都具有两面性，缓存层的加入往往会增加系统复杂性，增大系统维护的难度。因此是否设置缓存层往往需要权衡利弊，考虑缓存层会带来问题，如：</p><ul><li>更新策略</li><li>缓存粒度控制</li><li>缓存击穿</li><li>缓存雪崩</li><li>无底洞问题</li><li>热点数据优化</li></ul><h2 id="1-缓存的利与弊"><a href="#1-缓存的利与弊" class="headerlink" title="1. 缓存的利与弊"></a>1. 缓存的利与弊</h2><h3 id="1-1-利："><a href="#1-1-利：" class="headerlink" title="1.1 利："></a>1.1 利：</h3><ul><li>提高响应速度。缓存通常会更靠近需求端（CDN、反向代理）或者完全基于内存（redis、memcache）以加速读写性能，优化用户体验。</li><li>降低后端负载。比如在数据库Mysql、Oracle前设置一层本地缓存或者redis缓存，可以有效减少对数据库的压力。</li></ul><h3 id="1-2-弊"><a href="#1-2-弊" class="headerlink" title="1.2 弊"></a>1.2 弊</h3><ul><li>提高代码维护成本。增加缓存后，需要同时维护缓存与持久层的业务逻辑。</li><li>数据一致性弱化。仅能保证最终一致性，无法实现强一致性。</li><li>增加运维成本。增加了CDN、Memcache、redis等缓存中间件后不可避免的会增加系统复杂度。</li></ul><h2 id="2-缓存使用的前提与场景"><a href="#2-缓存使用的前提与场景" class="headerlink" title="2. 缓存使用的前提与场景"></a>2. 缓存使用的前提与场景</h2><h3 id="2-1-使用前提"><a href="#2-1-使用前提" class="headerlink" title="2.1 使用前提"></a>2.1 使用前提</h3><ul><li>数据访问不均衡，存在热点数据，热点数据可以存放在缓存中。</li><li>数据具有一定的有效时长，不会很快失效。</li></ul><h3 id="2-2-使用场景"><a href="#2-2-使用场景" class="headerlink" title="2.2 使用场景"></a>2.2 使用场景</h3><ul><li>需要快速响应的场景：比如涉及到大量图片的访问时，因为图片占用带宽，往往会选用CDN。对数据访问速度有要求的场景可以选用redis等缓存中间件或者本地缓存。</li><li>并发高的场景。抢购、促销等活动时，往往瞬间请求量很大，为了降低后端压力，可以将库存等热点数据放到缓存中，降低流量对后端数据库的冲击。</li></ul><h2 id="3-更新策略"><a href="#3-更新策略" class="headerlink" title="3. 更新策略"></a>3. 更新策略</h2><p>　　缓存中的数据一般是由生效时间的，除非把具有持久化功能的缓存当做数据库使用。常用的缓存更新策略主要有几种，具体选用哪种策略，需要根据业务场景对一致性的要求进行选择。</p><h3 id="3-1-LRU-LFU-FIFO算法剔除。"><a href="#3-1-LRU-LFU-FIFO算法剔除。" class="headerlink" title="3.1 LRU/LFU/FIFO算法剔除。"></a>3.1 LRU/LFU/FIFO算法剔除。</h3><p>　　这些剔除算法执行自动更新策略，认为干预少，数据一致性差。</p><h3 id="3-2-超时剔除。"><a href="#3-2-超时剔除。" class="headerlink" title="3.2 超时剔除。"></a>3.2 超时剔除。</h3><p>　　缓存中的数据都设置一个过期时间，使用缓存中的数据时，每次都判断数据是否过期，如果过期，重新从数据源获取。如果数据源数据被更改而缓存数据未过期，此时会存在不一致的问题。</p><h3 id="3-3-主动更新。"><a href="#3-3-主动更新。" class="headerlink" title="3.3 主动更新。"></a>3.3 主动更新。</h3><p>　　数据源的数据被改动时，主动推送到缓存来更新数据。这种方式数据一致性会非常好。为了保证可靠性，这种方式往往也会设置过期时间，如果过期后未被更新，则需要主动从数据源获取。</p><h2 id="4-缓存粒度控制"><a href="#4-缓存粒度控制" class="headerlink" title="4.缓存粒度控制"></a>4.缓存粒度控制</h2><p>　　缓存粒度就是在做缓存层时，需要考虑缓存的数据范围。缓存全部数据？缓存部分数据的部分字段？一般缓存层是用来缓存热点数据。<br>　　为何要考虑缓存粒度？因为做缓存的过程是会占用空间和时间的，缓存数据量大时，会占用大量内存，缓存更新的过程也会更频繁，缓存过程更耗时。而如果仅仅缓存部分数据的部分字段，如果数据字段有变动，代码就需要及时更新。因此要根据具体使用情况来确定粒度。<br>　　在实践中商城的购物车往往对数据的准确性并不敏感，此时可选用具有持久化功能的全缓存数据库替代mysql等数据源。</p><h2 id="5-缓存穿透"><a href="#5-缓存穿透" class="headerlink" title="5.缓存穿透"></a>5.缓存穿透</h2><p>　　缓存穿透是指查询一个根本不存在的数据（一般为非热点数据），在缓存层和数据持久层都不会被命中。这种请求的特点是每次都会经过缓存层再到数据源，这会导致流量直接冲击到后端数据源。<br>　　如果出现大量的缓存穿透也会造成很大的问题，比如数据源并发量过大响应超时、宕机等。<br>　　如何避免？</p><h3 id="5-1-将空对象缓存。"><a href="#5-1-将空对象缓存。" class="headerlink" title="5.1 将空对象缓存。"></a>5.1 将空对象缓存。</h3><p>　　将空对象做缓存会将请求隔离到缓存层，避免对后端的冲击，但是如果缓存失效前，存储层数据被添加，此时会存在数据不一致的问题。建议超时时间设置短一点。</p><h3 id="5-2-布隆过滤器"><a href="#5-2-布隆过滤器" class="headerlink" title="5.2 布隆过滤器"></a>5.2 布隆过滤器</h3><p>　　将持久层拥有的数据的逐渐集合存设置到缓存中，如果在缓存中获取数据失败，则先查询缓存中的主键集合，如果集合中不存在该数据主键，则不需要再到持久层查询数据。这种方式代码会比较复杂。</p><blockquote><p><a href="https://en.wikipedia.org/wiki/Bloom_filter" title="布隆过滤器相关知识" target="_blank" rel="noopener">布隆过滤器相关知识</a><br><a href="https://github.com/erikdubbelboer/redis-lua-scaling-bloom-filter" target="_blank" rel="noopener">布隆过滤器开源代码</a></p></blockquote><h2 id="6-无底洞问题"><a href="#6-无底洞问题" class="headerlink" title="6. 无底洞问题"></a>6. 无底洞问题</h2><p>　　分布式缓存架构中，当缓存数据过多时，被划分成多个缓存节点。当缓存节点达到一定的数量时，如果继续增加节点可能会导致一次业务需要请求多个节点的缓存数据（典型的如批量数据操作），反而导致性能降低。也就是节点多，不一定性能好。<br>　　出现这个现象的原因是键值数据一般会采用哈希函数将key置于不同的节点上，这种哈希分配与业务无关，当一个业务需要批量操作数据时，可能要跨多个节点，这就涉及到多个网络操作，造成耗时增多。<br>　　如何避免无底洞问题？当数据量庞大时，必然会造成节点数增多，这种情况无法避免，但是可以采取措施，降低无底洞问题造成的影响。</p><ul><li>并行操作。在批量处理数据时采用多线程并行，虽然网络访问次数未改变，但总耗时降低。</li><li>分业务存放数据。使用缓存中间件的现有功能，比如redis的hashtag功能，将业务相关的数据放到一个节点下。但是这种方法会造成业务数据分布不均，另外数据分布与业务强相关会造成维护成本提高。</li></ul><h2 id="7-缓存雪崩"><a href="#7-缓存雪崩" class="headerlink" title="7. 缓存雪崩"></a>7. 缓存雪崩</h2><p>　　缓存层宕掉后，流量会集中涌向后端存储层，导致存储层调用量暴增。如何避免出现缓存雪崩？</p><ul><li>提高缓存层可用性。比如主从缓存架构，灾备部署等，redis的Sentinel和Cluster功能等。</li><li>缓存降级或者隔离。当缓存层出现故障时，做降级处理或者对不同的重要数据做好依赖隔离，避免一种数据出现问题影响到整个存储层。常用的降级和依赖隔离工具Hystrix。</li></ul><ol start="8"><li>热点数据更新策略<br>　　一般缓存都会设置过期时间，当某一条热点数据失效瞬间，可能会有大量请求来访问，造成否段瞬间负载过大。比如微博系统，宝强事件、小璐事件、丽颖结婚官宣等都造成了微博的瞬间不可用，除此之外还有电商网站的抢购活动，比如淘宝双十一、小米抢购等都可能出现这种问题。<br>　　系统该如何避免这种情况的出现呢？</li></ol><ul><li>重建线程互斥。当热点数据失效时，只允许一个请求线程去后端存储层获取数据，其他线程等待（设定等待超时时间）或直接返回（一般会采用后者），避免所有请求都到后端</li><li>过期前主动更新。这种方式可以完全避免数据失效对后端带来的冲击，实现简单，但处理不好可能会出现线程间的调度问题。</li><li>永不过期的缓存数据。设立单独的线程，主动检查过期数据，在数据过期前主动进行刷新。这种方式并不能完全避免热点数据失效，因为在刷新线程执行前恰好一条数据出现失效且恰好属于热点数据，这就会出现问题，并且这种方法也会增加维护工作量。</li></ul><p>　　除此之外，缓存数据还有一些优秀实践，比如数据预热、不用数据过期时间不同。</p><ul><li>数据预热。为防止数据失效，电商抢购等活动开始前可以提前对缓存系统进行预热，通过自动化手段提前发起可控的大量业务请求，刷新缓存中的数据。</li><li>设置不同的过期时间。将缓存数据的过期时间打散，避免集中失效时大量请求同时访问后端存储层。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;&lt;em&gt;互联网技术的发展遵循的一个基本原则：时间换空间或者空间换时间。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　缓存就是将数据存放在距离计算最快的地方，以加快处理速度。缓存也能有效隔离前端请求压力的传递，降低后端负载。然而事物都具有两面性，缓存层的加入
      
    
    </summary>
    
      <category term="架构" scheme="http://yoursite.com/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="缓存，分布式，高性能" scheme="http://yoursite.com/tags/%E7%BC%93%E5%AD%98%EF%BC%8C%E5%88%86%E5%B8%83%E5%BC%8F%EF%BC%8C%E9%AB%98%E6%80%A7%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>Spring的profile实现多国、多环境打包</title>
    <link href="http://yoursite.com/2018/12/08/Spring%E7%9A%84profile%E5%AE%9E%E7%8E%B0%E5%A4%9A%E5%9B%BD%E3%80%81%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%89%93%E5%8C%85/"/>
    <id>http://yoursite.com/2018/12/08/Spring的profile实现多国、多环境打包/</id>
    <published>2018-12-08T10:28:41.275Z</published>
    <updated>2018-12-08T10:28:32.341Z</updated>
    
    <content type="html"><![CDATA[<p>全球电商平台因为涉及到用户数据，因此需要在不同地区的机房或者不同区域的公有云上部署。另外还有开发环境、测试环境的区别。都存在不同的配置问题。</p><p>解决方法有两种：<br>1）不同的环境打不同的安装包。<br>2）不同的环境打相同的安装包，但不同的环境所加载的配置不同。</p><p>这两种方式我们都有使用过，因为需要支撑全球，如果按照第一种方式，同一个版本需要打十几个包，造成安装包泛滥，后期容器化后又要出不同的镜像。后来改用第二种方式，所有国家和环境使用同一个安装包，不同的国家激活不同的profile，激活方式使用系统环境变量的方法，同时将配置文件提取出来使用配置中心管理，安装包归一化。</p><p>Spring profile的配置方式可参考<br><a href="https://www.baeldung.com/spring-profiles" target="_blank" rel="noopener">https://www.baeldung.com/spring-profiles</a><br><a href="https://www.cnblogs.com/strugglion/p/7091021.html" target="_blank" rel="noopener">https://www.cnblogs.com/strugglion/p/7091021.html</a><br><a href="http://websystique.com/spring/spring-profile-example/" target="_blank" rel="noopener">http://websystique.com/spring/spring-profile-example/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;全球电商平台因为涉及到用户数据，因此需要在不同地区的机房或者不同区域的公有云上部署。另外还有开发环境、测试环境的区别。都存在不同的配置问题。&lt;/p&gt;
&lt;p&gt;解决方法有两种：&lt;br&gt;1）不同的环境打不同的安装包。&lt;br&gt;2）不同的环境打相同的安装包，但不同的环境所加载的配置不
      
    
    </summary>
    
      <category term="Spring" scheme="http://yoursite.com/categories/Spring/"/>
    
    
      <category term="Spring" scheme="http://yoursite.com/tags/Spring/"/>
    
      <category term="profile" scheme="http://yoursite.com/tags/profile/"/>
    
  </entry>
  
  <entry>
    <title>Web.xml中配置spring配置文件</title>
    <link href="http://yoursite.com/2018/12/08/web.xml%E4%B8%AD%E9%85%8D%E7%BD%AEspring%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2018/12/08/web.xml中配置spring配置文件/</id>
    <published>2018-12-08T08:33:33.170Z</published>
    <updated>2018-12-08T09:41:50.197Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-web-xml的上下文参数配置方法"><a href="#1-web-xml的上下文参数配置方法" class="headerlink" title="1. web.xml的上下文参数配置方法"></a>1. web.xml的上下文参数配置方法</h2><p>web.xml介绍请参见<a href="https://mudaoren.github.io/2018/10/30/Tomcat%E7%9A%84web%E9%85%8D%E7%BD%AE/" title="Tomcat的web.xml配置" target="_blank" rel="noopener">Tomcat的web.xml配置</a>。</p><pre><code>&lt;context-param&gt;  &lt;param-name&gt;webmaster&lt;/param-name&gt;  &lt;param-value&gt;myaddress@mycompany.com&lt;/param-value&gt;  &lt;description&gt;    The EMAIL address of the administrator to whom questions    and comments about this application should be addressed.  &lt;/description&gt;&lt;/context-param&gt;</code></pre><p>web.xml中直接配置的上下文变量，可以被本webapp中的所有jsp和servlet调用。代码中可以通过如下代码获取</p><pre><code>String value = getServletContext().getInitParameter(&quot;webmaster&quot;);</code></pre><h2 id="2-Spring上下文配置文件在web-xml中的配置方法"><a href="#2-Spring上下文配置文件在web-xml中的配置方法" class="headerlink" title="2. Spring上下文配置文件在web.xml中的配置方法"></a>2. Spring上下文配置文件在web.xml中的配置方法</h2><p>Tomcat中集成Spring服务，也可以通过web.xml配置完成spring配置文件的加载，即Spring上下文的加载。</p><p>首先，需要在web.xml中配置Spring的上下文监听器。当webapp被加载时，将启动Spring的监听器。</p><pre><code>&lt;listener&gt;   &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;  &lt;/listener&gt;</code></pre><p>Spring上下文加载监听器启动时会读取contextConfigLocation来获取配置文件。<br>1）当web.xml中没有配置contextConfigLocation时，将默认加载<code>/WEB-INF/applicationContext.xml</code>。<br>2）如果web.xml中配置了上下文参数contextConfigLocation，则会加载这个参数指定路径下的文件。在web.xml中可以通过如下配置：</p><pre><code>&lt;context-param&gt;    &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;    &lt;param-value&gt;classpath*:**/spring-*.xml&lt;/param-value&gt;&lt;/context-param&gt;</code></pre><h2 id="3-Spring的contextConfigLocation参数不同配置方式说明"><a href="#3-Spring的contextConfigLocation参数不同配置方式说明" class="headerlink" title="3. Spring的contextConfigLocation参数不同配置方式说明"></a>3. Spring的contextConfigLocation参数不同配置方式说明</h2><p>contextConfigLocation在web.xml中可以通过指定具体的路径或者class目录下的路径如<code>classpath:</code>和<code>classpath*:</code>两种配置方式，这两种配置方式是指定配置文件的位置信息。配置文件的名称可以使用功能通配符。</p><ul><li>classpath：到webapp的class路径中查找找文件。</li><li>classpath*：到webapp的class路径及jar文件中(class路径)进行查找。</li></ul><h3 id="3-1-指定具体的文件名"><a href="#3-1-指定具体的文件名" class="headerlink" title="3.1 指定具体的文件名"></a>3.1 指定具体的文件名</h3><p>1) 指定目录下的具体文件。</p><pre><code>&lt;context-param&gt;    &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;    &lt;param-value&gt;WEB-INF/applicationContext.xml&lt;/param-value&gt;&lt;/context-param&gt;</code></pre><p>2）class路径下的具体文件</p><pre><code>&lt;context-param&gt;    &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;    &lt;param-value&gt;classpath:spring-base.xml,classpath:spring-datasource.xml&lt;/param-value&gt;&lt;/context-param&gt;</code></pre><p>3）指定目录下文件及jar中的配置文件，在哪里找到都可以。</p><pre><code>&lt;context-param&gt;    &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;    &lt;param-value&gt;classpath*:spring-base.xml,classpath:spring-datasource.xml&lt;/param-value&gt;&lt;/context-param&gt;</code></pre><h3 id="3-2-使用通配符"><a href="#3-2-使用通配符" class="headerlink" title="3.2 使用通配符"></a>3.2 使用通配符</h3><p>1）class路径下以spring-或者spring-datasource-开头的xml类型的配置文件<br>    <context-param><br>        <param-name>contextConfigLocation</param-name><br>        <param-value>classpath:spring-<em>.xml,classpath:spring-datasource-</em>.xml</param-value><br>    </context-param></p><p>2）class路径及所有子路径下以spring-或者spring-datasource-开头的xml类型的配置文件<br>    <context-param><br>        <param-name>contextConfigLocation</param-name><br>        <param-value>classpath:*<em>spring-</em>.xml,classpath:spring-datasource-*.xml</param-value><br>    </context-param></p><p>3）class路径下以spring-或者spring-datasource-开头的xml类型的配置文件。<strong>注意，使用通配符时，无法匹配jar中的配置文件了</strong>，如果需要匹配，只能指定具体的文件名。</p><pre><code>&lt;context-param&gt;    &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;    &lt;param-value&gt;classpath*:spring-*.xml,classpath:spring-datasource-*.xml&lt;/param-value&gt;&lt;/context-param&gt;</code></pre><p><strong>最佳实践：</strong></p><ul><li>如果配置内容比较多，建议分不同的配置文件存放。</li><li>配置文件较多时，建议统一目录存放。</li><li>如果多个配置文件分属不同的功能模块，可以划分配置子目录存放。</li><li>如果需要加载的配置文件较多时，建议在web.xml中统一加载为spring-context.xml，将需要加载的配置文件使用Spring配置文件的import方法集中到spring-context.xml中加载。</li></ul><p>spring监听器ContextLoaderListener初始化过程可参见<a href="https://blog.csdn.net/datoubangzhu/article/details/78856235。" target="_blank" rel="noopener">https://blog.csdn.net/datoubangzhu/article/details/78856235。</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-web-xml的上下文参数配置方法&quot;&gt;&lt;a href=&quot;#1-web-xml的上下文参数配置方法&quot; class=&quot;headerlink&quot; title=&quot;1. web.xml的上下文参数配置方法&quot;&gt;&lt;/a&gt;1. web.xml的上下文参数配置方法&lt;/h2&gt;&lt;p&gt;
      
    
    </summary>
    
      <category term="tomcat" scheme="http://yoursite.com/categories/tomcat/"/>
    
    
      <category term="tomcat" scheme="http://yoursite.com/tags/tomcat/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="spring" scheme="http://yoursite.com/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>Linux挂载命令mount用法</title>
    <link href="http://yoursite.com/2018/12/06/Linux%E6%8C%82%E8%BD%BD%E5%91%BD%E4%BB%A4mount%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2018/12/06/Linux挂载命令mount用法/</id>
    <published>2018-12-06T14:28:57.009Z</published>
    <updated>2018-12-06T14:28:46.424Z</updated>
    
    <content type="html"><![CDATA[<p>　　mount命令用于挂载文件系统到指定的加载点，他可以挂在ext3/vfat/nfs等文件系统。此命令的最常用于挂载cdrom，使我们可以访问cdrom中的数据，因为你将光盘插入cdrom中，Linux并不会自动挂载，必须使用Linux mount命令来手动完成挂载。此外可以挂载其他设备上的共享目录到指定的加载点。本文后者的使用。</p><h2 id="1-挂接命令-mount"><a href="#1-挂接命令-mount" class="headerlink" title="1.挂接命令(mount)"></a>1.挂接命令(mount)</h2><ul><li><strong>语法</strong></li></ul><pre><code>mount [-t vfstype] [-o options] device dir</code></pre><ol><li><p>-t vfstype 指定文件系统的类型，一般不需要指定，mount 会自动选择正确的类型。</p><blockquote><p>可挂载的文件类型包括：<br>光盘或光盘镜像：iso9660<br>DOS fat16文件系统：msdos<br>Windows 9x fat32文件系统：vfat<br>Windows NT ntfs文件系统：ntfs<br>Mount Windows文件网络共享：smbfs<br>UNIX(LINUX) 文件网络共享：nfs</p></blockquote></li><li><p>-o options 用来描述设备或档案的挂接方式。</p><blockquote><p>loop：用来把一个文件当成硬盘分区挂接上系统<br>ro：采用只读方式挂接设备<br>rw：采用读写方式挂接设备<br>iocharset：指定访问文件系统所用字符集</p></blockquote></li><li><p>device 要挂接(mount)的设备，共享目录的服务端。</p></li><li>dir 设备在本系统上的挂接点(mount point)。</li></ol><h2 id="2-挂载Windows共享目录"><a href="#2-挂载Windows共享目录" class="headerlink" title="2.挂载Windows共享目录"></a>2.挂载Windows共享目录</h2><p>Linux挂载Windows的共享目录，必须安装samba软件。Windows网络共享核心必须是SMB/CIFS。<br>先将Windows的目录设置为共享（假设ip为10.192.168.32，共享目录为F:/），再在Linux上挂载该Windows共享目录。</p><h3 id="2-1-建立本地挂载点-mount-point"><a href="#2-1-建立本地挂载点-mount-point" class="headerlink" title="2.1 建立本地挂载点(mount point)"></a>2.1 建立本地挂载点(mount point)</h3><pre><code># mkdir –p /mnt/share</code></pre><h3 id="2-2-执行挂载操作，将Windows的共享目录F，挂载到Linux的-mnt-share目录-如此就可以在linux系统上通过-mnt-share来访问windows系统磁盘上的文件了。"><a href="#2-2-执行挂载操作，将Windows的共享目录F，挂载到Linux的-mnt-share目录-如此就可以在linux系统上通过-mnt-share来访问windows系统磁盘上的文件了。" class="headerlink" title="2.2 执行挂载操作，将Windows的共享目录F，挂载到Linux的/mnt/share目录,如此就可以在linux系统上通过/mnt/share来访问windows系统磁盘上的文件了。"></a>2.2 执行挂载操作，将Windows的共享目录F，挂载到Linux的/mnt/share目录,如此就可以在linux系统上通过/mnt/share来访问windows系统磁盘上的文件了。</h3><pre><code># mount -t smbfs -o username=admin,password=123 //10.192.168.32/F$ /mnt/share</code></pre><blockquote><p>说明：<br>admin 和 123 是ip地址为10.192.168.32的windows计算机的一个用户名和密码，F$是这台计算机的一个磁盘共享。</p></blockquote><h2 id="3-挂载UNIX系统NFS文件共享"><a href="#3-挂载UNIX系统NFS文件共享" class="headerlink" title="3.挂载UNIX系统NFS文件共享"></a>3.挂载UNIX系统NFS文件共享</h2><p>Linux(UNIX)系统也有自己的网络共享，那就是NFS(网络文件系统)，下面我们就以SUN Solaris2.8和REDHAT as server 3 为例介绍在linux下如何mount nfs网络共享。<br>在linux客户端挂接(mount)NFS磁盘共享之前，必须先配置好NFS服务端。</p><h3 id="3-1-服务端配置（被挂载者）"><a href="#3-1-服务端配置（被挂载者）" class="headerlink" title="3.1 服务端配置（被挂载者）"></a>3.1 服务端配置（被挂载者）</h3><ul><li><strong>Solaris系统NFS服务端配置方法</strong></li></ul><p>1.修改/etc/dfs/dfstab, 增加共享目录</p><pre><code># share -F nfs -o rw /export/home/sunky</code></pre><p>2.启动nfs服务</p><pre><code># /etc/init.d/nfs.server start</code></pre><p>3.NFS服务启动以后，也可以使用下面的命令增加新的共享</p><pre><code># share /export/home/sunky1 # share /export/home/sunky2</code></pre><blockquote><p>说明：<br>注：/export/home/sunky和/export/home/sunky1是准备共享的目录</p></blockquote><ul><li><strong>linux系统NFS服务端配置方法</strong></li></ul><p>1.修改/etc/exports,增加共享目录</p><pre><code>/export/home/sharedir1 192.168.0.12(rw) /export/home/sharedir2 *(rw) /export/home/sharedir3 linux-client(rw)</code></pre><blockquote><p>说明：</p><ul><li>/export/home/sharedir1、sharedir2、sharedir3是准备共享的目录，而有权限挂载这些目录的客户端可以用IP、主机名、正则表达式等方式指定。如192.168.0.12、*、</li><li>linux-client是被允许挂接此共享linux客户机的IP地址或主机名。<br>如果使用主机名指定挂载的客户端，需要在/etc/hosts中配置客户端的Ip映射：192.168.0.12 linux-client</li><li>(rw)是挂载者对本共享目录所拥有的权限。</li></ul></blockquote><p>2.启动与停止NFS服务</p><pre><code>/etc/rc.d/init.d/portmap start (在REDHAT中PORTMAP是默认启动的) /etc/rc.d/init.d/nfs start 启动NFS服务 /etc/rc.d/init.d/nfs stop 停止NFS服务</code></pre><blockquote><p>说明：<br>修改/etc/export文件增加新的共享目录时，需要先停止NFS服务，再启动NFS服务才能使新增加的共享起作用。也可以使用命令exportfs -rv达到同样的效果。</p></blockquote><h3 id="3-2-客户端（挂载者）"><a href="#3-2-客户端（挂载者）" class="headerlink" title="3.2 客户端（挂载者）"></a>3.2 客户端（挂载者）</h3><h3 id="3-2-1-建立本地挂载点-mount-point"><a href="#3-2-1-建立本地挂载点-mount-point" class="headerlink" title="3.2.1 建立本地挂载点(mount point)"></a>3.2.1 建立本地挂载点(mount point)</h3><pre><code># mkdir –p /mnt/share</code></pre><h3 id="3-2-2执行挂载操作-将主机IP为192-168-5-88的NFS服务端共享目录-export-home-sharedir1挂载到客户端的-mnt-share目录。"><a href="#3-2-2执行挂载操作-将主机IP为192-168-5-88的NFS服务端共享目录-export-home-sharedir1挂载到客户端的-mnt-share目录。" class="headerlink" title="3.2.2执行挂载操作,将主机IP为192.168.5.88的NFS服务端共享目录/export/home/sharedir1挂载到客户端的/mnt/share目录。"></a>3.2.2执行挂载操作,将主机IP为192.168.5.88的NFS服务端共享目录/export/home/sharedir1挂载到客户端的/mnt/share目录。</h3><pre><code>#mount -t nfs -o rw 192.168.5.88:/export/home/sharedir1 /mnt/share</code></pre><p>现在你可以在客户端的/mnt/share目录下操作文件和目录了，而这些文件和目录实际上是在192.168.5.88上的/export/home/sharedir1这个目录中。</p><h2 id="4-解除挂载"><a href="#4-解除挂载" class="headerlink" title="4.解除挂载"></a>4.解除挂载</h2><p>不再使用挂载目录时不能直接删除，因为那样删除的是被挂载的服务端的目录内容。首先应该先解除挂载。</p><pre><code>umount /mnt/share</code></pre><blockquote><p>说明：<br>/mnt/share是挂载点（mount point）</p></blockquote><p>参考</p><blockquote><p>《鸟哥的Linux私房菜》<br><a href="http://man.linuxde.net/mount" target="_blank" rel="noopener">http://man.linuxde.net/mount</a><br><a href="https://www.linuxprobe.com/mount-detail-parameters.html" target="_blank" rel="noopener">https://www.linuxprobe.com/mount-detail-parameters.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;　　mount命令用于挂载文件系统到指定的加载点，他可以挂在ext3/vfat/nfs等文件系统。此命令的最常用于挂载cdrom，使我们可以访问cdrom中的数据，因为你将光盘插入cdrom中，Linux并不会自动挂载，必须使用Linux mount命令来手动完成挂载。此外
      
    
    </summary>
    
      <category term="操作系统" scheme="http://yoursite.com/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="mount" scheme="http://yoursite.com/tags/mount/"/>
    
  </entry>
  
  <entry>
    <title>Linux环境变量设置</title>
    <link href="http://yoursite.com/2018/12/06/Linux%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E8%AE%BE%E7%BD%AE/"/>
    <id>http://yoursite.com/2018/12/06/Linux环境变量设置/</id>
    <published>2018-12-05T16:00:06.077Z</published>
    <updated>2018-12-05T15:59:49.194Z</updated>
    
    <content type="html"><![CDATA[<p>　　操作系统一般都是支持多用户多任务，在操作系统中可以为不同的用户设置不同的环境变量（用户环境变量），也可以为所有用户设置统一的环境变量（系统环境变量）。Linux和windows系统均是如此。</p><h2 id="1-Linux下的环境变量"><a href="#1-Linux下的环境变量" class="headerlink" title="1.Linux下的环境变量"></a>1.Linux下的环境变量</h2><p>Linux的环境变量存在于多个文件中，主要有以下几个文件：</p><ul><li>系统环境变量文件/etc/profile和/etc/environment。</li><li>用户环境变量文件~/.bash_profile、~/.bash_login和~/.profile。bash的login shell设定只会读取上面三个文件的其中一个， 而读取得顺序则是依照上面的顺序。</li></ul><h3 id="1-1-etc-profile-login-shell时读取）"><a href="#1-1-etc-profile-login-shell时读取）" class="headerlink" title="1.1 /etc/profile(login shell时读取）"></a>1.1 /etc/profile(login shell时读取）</h3><p>用户登录时才会读取的文件，是操作系统获取环境变量时第一个读取的文件。<br>这个文件会主动引用其他的文件/etc/profile.d 、/etc/profile.d/*.sh和/etc/bash.bashrc。因此虽然login时读取文件/etc/profile，实际上获取到的环境变量不止在/etc/profile中。</p><h3 id="1-2-etc-environment"><a href="#1-2-etc-environment" class="headerlink" title="1.2 /etc/environment"></a>1.2 /etc/environment</h3><p>用户在登录操作系统之后，操作系统配置环境时所使用的第二个文件。<br>顾名思义，该文件中保存了一系列环境变量，这些变量将对所有的用户和终端起效。</p><p>到这一级为止，文件定义的都是系统环境变量，之后的文件都是在定义用户变量。</p><h3 id="1-3-bash-profile-login-shell-才会读"><a href="#1-3-bash-profile-login-shell-才会读" class="headerlink" title="1.3 ~/.bash_profile (login shell 才会读)"></a>1.3 ~/.bash_profile (login shell 才会读)</h3><p>~/.bash_profile、~/.bash_login和~/.profile。bash的login shell设定只会读取上面三个文件的其中一个， 而读取得顺序则是依照上面的顺序。<br>在我使用的Ubuntu操作系统中，实际存在的是~/.profile。我们看一下文件的内容：</p><p><img src="https://i.imgur.com/f85RcMn.png" alt=""></p><p>if…then中又判断了第二个文件~/.bashrc是否存在，如果存在就会引用。<br>最后一行，以累加的方式对/etc/profile中设置过的path增加了~/bin等目录作为额外的执行文件存放目录。用户可以将自己建立的执行文件放到这个目录下（不需要再使用绝对路径或者相对路径执行了）。</p><h3 id="1-4-bashrc"><a href="#1-4-bashrc" class="headerlink" title="1.4 ~/.bashrc"></a>1.4 ~/.bashrc</h3><p>该文件包含了专用于一个用户的bash的环境信息，每次登录或者新开shell的时候（包括在图形界面下打开新的终端），该文件被读取。<br>该文件只会在新开的终端中起效。原有终端不会受到影响。</p><h3 id="1-5-bash-logout"><a href="#1-5-bash-logout" class="headerlink" title="1.5 ~/.bash_logout"></a>1.5 ~/.bash_logout</h3><p>每次退出bash的时候会执行。</p><h3 id="1-6-小结"><a href="#1-6-小结" class="headerlink" title="1.6 小结"></a>1.6 小结</h3><p><strong>login shell的读取顺序：</strong></p><p><img src="https://i.imgur.com/KiUjqJQ.png" alt=""></p><p>实线是主流程，虚线是被动应用的配置文件。</p><h2 id="2-环境变量的查看方法及相关命令"><a href="#2-环境变量的查看方法及相关命令" class="headerlink" title="2.环境变量的查看方法及相关命令"></a>2.环境变量的查看方法及相关命令</h2><ul><li>env查看当前用户的环境变量与常用变量</li><li>set查看shell所有变量（环境变量和用户自定义变量）</li><li>export若不带参数则显示用户变量的shell变量，若带参数，则将该shell参数添加至用户变量。如果在命令行直接使用这个参数设置变量（如export HELLO=”hello”），则变量只对当前shell（BASH）有效（临时的），重新登录后会失效。</li><li>source读入环境配置文件的指令。因为/etc/profile和~/.bash_profile在login是才会被读取，因此如果用户修改了这两个文件中的变量后，只能在重新登录后才会生效。此时可以使用source或者小数点加空格将新设置的环境变量读取到shell中。</li><li>echo $变量名，查看具体的变量设置。</li></ul><h2 id="3-常见的环境变量"><a href="#3-常见的环境变量" class="headerlink" title="3.常见的环境变量"></a>3.常见的环境变量</h2><ul><li>PATH：决定了shell将在哪些目录中寻找命令和程序</li><li>HOME：当前用户的主目录</li><li>MAIL：当前用户的邮件存放目录</li><li>SHELL：当前用户用的是那种Shell</li><li>HISTSIZE：保存历史命令记录的条数</li><li>LOGNAME：当前用户的登录名</li><li>HOSTNAME：主机的名称。</li><li>LANG/LANGUGE：和语言相关的环境变量，使用多种语言的用户可以修改此环境变量</li><li>PS1：基本提示符，对于root是#，对于普通用户为$，在我手中的ubuntu10.10中则是一个字符串，显示了用户名、系统名和当前目录名在内的信息。</li><li>PS2：是附属提示符，默认是”&gt;”。可以修改此环境变量来修改当前的命令符。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;　　操作系统一般都是支持多用户多任务，在操作系统中可以为不同的用户设置不同的环境变量（用户环境变量），也可以为所有用户设置统一的环境变量（系统环境变量）。Linux和windows系统均是如此。&lt;/p&gt;
&lt;h2 id=&quot;1-Linux下的环境变量&quot;&gt;&lt;a href=&quot;#1-
      
    
    </summary>
    
      <category term="操作系统" scheme="http://yoursite.com/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="环境变量" scheme="http://yoursite.com/tags/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
    
  </entry>
  
  <entry>
    <title>开源License</title>
    <link href="http://yoursite.com/2018/11/24/%E5%BC%80%E6%BA%90License/"/>
    <id>http://yoursite.com/2018/11/24/开源License/</id>
    <published>2018-11-24T15:40:01.089Z</published>
    <updated>2018-11-24T15:24:32.921Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/vFspvAv.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://i.imgur.com/vFspvAv.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="License" scheme="http://yoursite.com/categories/License/"/>
    
    
      <category term="开源" scheme="http://yoursite.com/tags/%E5%BC%80%E6%BA%90/"/>
    
      <category term="License" scheme="http://yoursite.com/tags/License/"/>
    
  </entry>
  
  <entry>
    <title>江南白衣的java后端书架【转】</title>
    <link href="http://yoursite.com/2018/11/18/%E6%B1%9F%E5%8D%97%E7%99%BD%E8%A1%A3%E7%9A%84java%E5%90%8E%E7%AB%AF%E4%B9%A6%E6%9E%B6%E3%80%90%E8%BD%AC%E3%80%91/"/>
    <id>http://yoursite.com/2018/11/18/江南白衣的java后端书架【转】/</id>
    <published>2018-11-18T11:57:26.290Z</published>
    <updated>2018-11-16T14:13:09.420Z</updated>
    
    <content type="html"><![CDATA[<p><span style="line-height: 1.6;font-size: 15px;">见书单如面。&nbsp;</span></p><p><span style="line-height: 1.6;font-size: 15px;"><br></span></p><p><span style="font-size: 15px;line-height: 1.6;">在这份书单里，我是这么一个同学：关心Java，关心架构，对文字有一定的洁癖；基础知识懂一些，但忙，不会花太多时间来研究算法和OS；需要掌握一个软件时会买一本XX in Action，但不买那种各式安装指南、使用手册的。<br></span></p><p><br></p><p><span style="font-size: 15px;">如果你和我差不多的趣味，那这份书单会适合你。</span></p><p><br></p><p><span style="font-size: 15px;">为了避免混淆，书名的颜色分类，红色是种草， 黑色是拔草（至少不适合本文的预设读者）</span></p><p><br></p><h3 style="margin-top: 0.5em;margin-bottom: 0.5em;font-size: 1.4em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;vertical-align: baseline;color: rgb(172, 30, 6);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;">1. 国内一线的书</h3><p><span style="font-size: 15px;">说到大型互联网站的建设，我们在世界上也是一流的，比国外那些咨询师写的更深味其中艰辛。</span></p><p><br></p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;"><span style="font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;color: rgb(172, 30, 6);">《高可用架构(第一卷)》</span></p><p><span style="font-size: 15px;">厚厚的一本，新浪微博TimYang牵头的高可用架构社区，几十个一线实战案例的结集分享，从头看起的话只恨自己时间不够多。</span></p><p><br></p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;"><span style="color: rgb(172, 30, 6);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;">《大型网站： 架构演进与性能优化》</span></p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;"><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;line-height: 25.168px;font-size: 15px;">薄薄的一本</span><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;">，<span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;">今年新书，</span></span><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;line-height: 25.168px;font-size: 15px;">淘宝的分布式、无线化、中台化、单元化的历程与优化，同样是满满的一线经验。</span></p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;"><span style="font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;color: rgb(172, 30, 6);font-size: 15.73px;line-height: 25.168px;background-color: rgb(255, 255, 255);">《大型网站技术架构：核心原理与案例分析》</span></p><p><span style="font-size: 15px;">同是淘宝系薄书，如果一个新人进入到大型互联网站，这是最好的入门科书普。</span></p><p><br></p><p></p><p><br></p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;"><span style="color: rgb(172, 30, 6);font-size: 15.73px;line-height: 25.168px;background-color: rgb(255, 255, 255);">《亿级流量网站架构核心技术》</span></p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;">京东开涛作品，很多技术掰细了讲，所以也蛮厚的。</p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;"><span style="color: rgb(172, 30, 6);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;background-color: rgb(255, 255, 255);">《京东基础架构建设之路》</span></p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;"><span style="line-height: 25.6px;">从早前的.Net，到如今大量自研组件的体系，可以给兄弟单位的基础架构部做参考。</span></p><p style="line-height: 25.6px;white-space: normal;"><span style="color: rgb(172, 30, 6);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;background-color: rgb(255, 255, 255);">《进化 - 运维技术变革与实践探索》<br></span></p><p style="line-height: 25.6px;white-space: normal;margin-top: 10px;"><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 1.6;">赵成的极客时间，印成书了。<span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;">运维书里难得讲想法而不是工具使用的书：&nbsp;</span>“运维能力是整体技术架构能力的体现，运维层面爆发的故障一定是整体技术架构中存在问题，割裂两者，单纯的看技术架构或运维都是毫无意义的。”&nbsp;</span></p><p style="line-height: 25.6px;white-space: normal;margin-top: 10px;"><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 1.6;"></span></p><p><br></p><p><span style="font-size: 15px;"><strong>极客时间：</strong></span></p><p><span style="font-size: 15px;">极客时间是一种新的知识交付模式。为了保持书单的利益无关中立性，就不放二维码了，大家自个上&nbsp;<span style="color: rgb(61, 170, 214);"><a href="https://time.geekbang.org/" target="_blank" rel="noopener">https://time.geekbang.org/</a>&nbsp;</span></span></p><p><br></p><p><span style="font-size: 15px;"><span style="font-size: 15px;color: rgb(172, 30, 6);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;line-height: 25.168px;background-color: rgb(255, 255, 255);">《左耳听风》</span>，左耳朵耗子把自己脑子里的东西一股脑地倒了出来，唯一缺点是贵。</span></p><p><span style="font-size: 15px;"><span style="font-size: 15px;color: rgb(172, 30, 6);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;line-height: 25.168px;background-color: rgb(255, 255, 255);">《从零开始学架构》</span><span style="font-size: 15px;">，互联网架构的基础知识，用来培养新人或者自己查漏补缺。</span></span></p><p><span style="font-size: 15px;"><br></span></p>p&gt;<span style="font-size: 15px;"><strong>拔草：</strong>有些书名字蛮吸引，但翻开目录都是各种软件的安装和使用指南。</span><p></p><p><br></p><p><br></p><h3 style="margin-top: 0.5em;margin-bottom: 0.5em;font-size: 1.4em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;vertical-align: baseline;color: rgb(172, 30, 6);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;">2. 国外互联网架构的书</h3><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;margin-top: 5px;"><span style="color: rgb(172, 30, 6);">《SRE：Google运维解密》</span></p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;margin-top: 5px;"><span style="font-size: 15.73px;background-color: rgb(255, 255, 255);">自编广告词：“地球上有这么一个团队，将运维推向极限高度”。SRE的事情，很多是基础架构部的事情。今年的续篇，</span><span style="font-size: 15.73px;color: rgb(171, 25, 66);background-color: rgb(255, 255, 255);">《The Site Reliablity Workbook》</span><span style="font-size: 15.73px;background-color: rgb(255, 255, 255);">。</span></p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;margin-top: 5px;"><span style="font-size: 15.73px;background-color: rgb(255, 255, 255);"></span></p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;margin-top: 5px;"><span style="font-size: 15.73px;background-color: rgb(255, 255, 255);"><br></span></p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;margin-top: 10px;"><span style="color: rgb(172, 30, 6);">《发布！软件的设计与部署 》</span><br></p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;margin-top: 10px;">Nygard作品，关于高可靠性的软件，学校里不会教，出来社会却要面对的那部分。 英文原标题里，“软件”的完整表达是“Production-Ready Software<span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;">”</span></p><p style="line-height: 25.6px;white-space: normal;"><span style="font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;color: rgb(172, 30, 6);font-size: 15.73px;line-height: 25.168px;">《DevOps 软件架构师行动指南》</span></p><p style="margin-top: 5px;line-height: 25.6px;white-space: normal;"><span style="font-size: 15px;">DevOps的书里难得地讲基本原则，而不是讲具体用什么监控软件。</span></p><p style="margin-top: 5px;line-height: 25.6px;white-space: normal;"><span style="font-size: 15px;"><br></span></p><p style="margin-top: 5px;line-height: 25.6px;white-space: normal;"></p><p style="margin-top: 5px;line-height: 25.6px;white-space: normal;"><br></p><p style="line-height: 25.6px;white-space: normal;"><span style="font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;color: rgb(172, 30, 6);">《微服务设计》</span><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;">&nbsp;</span><br></p><p style="margin-top: 5px;line-height: 25.6px;white-space: normal;"><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;">微服务开山之作，那么多微服务的书，这本只谈原则而不会写一堆具体框架的使用。</span></p><p style="margin-top: 5px;line-height: 25.6px;white-space: normal;"><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;"><br></span></p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;"><span style="color: rgb(172, 30, 6);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;">《生产微服务》</span></p><p style="margin-top: 5px;"><span style="font-size: 15px;">再次被中文编辑的书名打败，其实是《Production-Ready Microservices》，作者以在Uber的经验，讲一个满足基本业务逻辑之外，生产可用的微服务的检查表。</span><br><br></p><p></p><p><br></p><p><br></p><p><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15px;background-color: rgb(255, 255, 255);"><strong style="line-height: 25.6px;white-space: normal;">附加</strong></span><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;background-color: rgb(255, 255, 255);"><strong style="line-height: 25.6px;white-space: normal;"> ：</strong><span style="line-height: 25.6px;">有两本英文标题明明是</span></span>Scalability<span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.6px;background-color: rgb(255, 255, 255);">的书，中文编辑硬是改为《架构即未来》，《架构真经》，前者有我们前CTO推荐不敢乱说，后者虽然是第二版还是觉得有点过时，大家自己看目录判断了。</span></p><p><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;background-color: rgb(255, 255, 255);"><br></span></p><p><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;background-color: rgb(255, 255, 255);"><br></span></p><p><span style="color: rgb(172, 30, 6);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 22.4px;line-height: 35.84px;background-color: rgb(255, 255, 255);">3. 架构师基础的书</span></p><p style="margin-top: 5px;"><span style="font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;color: rgb(172, 30, 6);background-color: rgb(255, 255, 255);">《恰如其分的软件架构 - 风险驱动的设计方法》</span></p><p style="margin-top: 5px;"><span style="font-size: 15px;">由于人类与生俱来的惰性，计算机原本科学的、精准的设计方式，有了敏捷的借口之后就很难再维持了。本书就是在这种背景下，提出由风险来决定设计的度。除了开始的风险驱动部分，其余部分就是规规矩矩标标准准的架构师教科书。</span></p><p><span style="color: rgb(172, 30, 6);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 22.4px;line-height: 35.84px;background-color: rgb(255, 255, 255);"><br></span></p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;"><span style="color: rgb(172, 30, 6);">《软件系统架构：使用视点和视角与利益相关者合作 第2版》</span></p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;">也是教科书，最难得的是，这本老书在十年后的2011年年升级了第二版，所以感觉鲜活了好多，也许是最鲜活的一本架构书。</p><p><br></p><p><strong><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;background-color: rgb(255, 255, 255);">附</span></strong><span style="font-size: 15px;"><strong><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;line-height: 25.168px;background-color: rgb(255, 255, 255);">加</span></strong></span><strong><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;background-color: rgb(255, 255, 255);">：<span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;"></span></span></strong><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;background-color: rgb(255, 255, 255);"><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;">说起更新，《</span><span style="color: rgb(68, 68, 68);font-family: 'Amazon Ember', Arial, sans-serif;font-size: 17px;line-height: 1.255;background-color: rgb(255, 255, 255);">Software Architecture in Practice&nbsp;3rd</span><span style="color: rgb(68, 68, 68);font-size: 15.73px;line-height: 1.6;">》也在2012年更新，《</span></span><span style="font-size: 17px;line-height: 1.255;">Documenting Software Architectures 2nd</span><span style="line-height: 1.6;">》在2010年更新，不过中规中矩，没那么大吸引力让人去啃英文了。</span></p><p><br></p><p><span style="font-size: 15px;"><strong><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;line-height: 25.168px;background-color: rgb(255, 255, 255);">拔草</span></strong></span><strong><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;background-color: rgb(255, 255, 255);">：</span></strong><span style="font-size: 15px;">关于设计模式，我以前曾经有过很多本，GOF23啦，企业应用架构模式啦，EIP啦， POSA 5卷本啦，反模式啦，JavaEE/SOA/Restful的模式啦。但现在觉得对新人来说，一本Java写的《Head First 设计模式》，知道什么叫设计模式就够了。</span></p><p><span style="font-size: 15px;"><br></span></p><p><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;line-height: 25.168px;font-size: 15px;background-color: rgb(255, 255, 255);">UML相关的书，其实UML只在那个重度文档的年代会体现统一的作用，现在大家都是怎么表达清楚怎么来，最多简单用下类图和时序图了。</span></p><p><br></p><h3 style="margin-top: 0.5em;margin-bottom: 0.5em;font-size: 1.4em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;vertical-align: baseline;color: rgb(172, 30, 6);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;">4. Java语言的书</h3><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;"><span style="color: rgb(172, 30, 6);font-size: 15.73px;line-height: 1.6;">《Java8 实战》</span><br></p><p><span style="font-size: 15.73px;background-color: rgb(255, 255, 255);">Java8的新特性讲得最全最仔细的，Java8是一道坎，很多程序员现在还没迈过去。英文版有重写了，面向<span style="font-size: 15.73px;line-height: 25.168px;background-color: rgb(255, 255, 255);">JDK9的</span></span><span style="color: rgb(171, 25, 66);">《<span style="font-size: 16px;line-height: 1.6;">Modern Java in Action</span><span style="line-height: 1.6;">》</span></span><span style="line-height: 1.6;">。</span></p><p><span style="color: rgb(171, 25, 66);line-height: 1.6;"><br></span></p><p><span style="line-height: 1.6;"></span></p><p><br></p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;"><span style="color: rgb(172, 30, 6);">《Java性能权威指南》</span></p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;">紫色的这本，比起多年前那部调优圣经，讲得更加深入，也更加贴近现在的JDK。英文版还有一本<span style="color: rgb(171, 25, 66);">《Optimizing Java》</span>。</p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;"><span style="color: rgb(172, 30, 6);">《深入理解 Java 虚拟机 第2版》</span><br></p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;">理解虚拟机并不是那么难，Java程序员来说，很多知识其实是必须的。</p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;"><span style="color: rgb(172, 30, 6);">《Java并发编程实战》</span></p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;">Java并发经典，人手一本不用多说了。</p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;"><span style="color: rgb(172, 30, 6);">《实战Java高并发程序设计》</span>&nbsp;</p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;">国人之作，流畅易读，内容也比上面一本新一些。</p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;vertical-align: baseline;"><span style="color:#ac1e06;font-family:微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;"><span style="font-size: 15.73px;">《Effective Java 2nd》</span><span style="font-size: 15.73px;line-height: 25.168px;"><br></span></span><span style="color: rgb(68, 68, 68);font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;font-size: 15px;">Java编码规范与指南， 英文版有覆盖JDK9的第三版。</span></p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;vertical-align: baseline;"><span style="color: rgb(68, 68, 68);font-size: 15px;">私家推荐，结合了它和</span><span style="color: rgb(172, 30, 6);font-size: 15.73px;line-height: 25.168px;">《Java编码指南：</span><span style="color: rgb(172, 30, 6);line-height: 25.168px;font-size: 14px;">编写安全可靠程序的75条建议</span><span style="font-size: 15px;"><span style="color: rgb(172, 30, 6);font-size: 15.73px;line-height: 25.168px;">》</span><span style="font-size: 15.73px;line-height: 25.168px;">、</span></span><span style="font-size: 15.73px;line-height: 1.6;color: rgb(171, 25, 66);">《阿里巴巴Java开发手册》</span><span style="color: rgb(68, 68, 68);font-size: 15px;">的</span><span style="color: rgb(172, 30, 6);font-size: 15.73px;line-height: 1.6;">《唯品会Java开发手册》</span><span style="color: rgb(61, 170, 214);font-size: 15px;">(<a href="https://vipshop.github.io/vjtools/" target="_blank" rel="noopener">https://vipshop.github.io/vjtools/</a>)</span></p><p>&nbsp;&nbsp;</p><p><strong>极客时间：</strong>&nbsp;</p><p><span style="font-size: 15px;"><span style="font-size: 15px;color: rgb(172, 30, 6);">《Java核心技术36讲》</span>是Oracle 做Java平台部门的杨晓峰的专栏，Java里很多关键点都讲到了。<br><br></span></p><p><span style="font-size: 15px;color: rgb(172, 30, 6);">《深入拆解Java虚拟机》</span><span style="font-size: 15px;">是Oracle里做新一代Graal编译器的高级研究员郑雨迪对JVM的深入讲解，能坚持看完的同学平时都可以装一副很懂的样子了。</span></p><p><span style="font-size: 15px;"><br></span></p><p><span style="font-size: 15px;"><br></span></p><p><strong><span style="font-size: 15px;">补充：</span></strong><span style="font-size: 15px;">&nbsp;<span style="font-size: 15px;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;line-height: 25.168px;">培训新人最好找</span><span style="font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;line-height: 25.168px;font-size: 15px;color: rgb(171, 25, 66);">《Java核心技术》</span><span style="font-size: 15px;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;line-height: 25.168px;">。最新是第10版，但按JDK近来的升级速度，这书都快追不上了。&nbsp;</span></span></p><p><span style="font-size: 15px;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;line-height: 25.168px;"><br></span></p><p><span style="font-size: 15px;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;line-height: 25.168px;">要一口吃成个胖子，推荐飒然的</span><span style="font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;line-height: 25.168px;font-size: 15px;color: rgb(171, 25, 66);">《Java工程师修炼之道》</span><span style="font-size: 15px;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;line-height: 25.168px;">，可以作为老鸟培养新人，整个Java后端开发的提纲式材料。</span></p><p><span style="font-size: 15px;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;line-height: 25.168px;"><br></span></p><p><span style="font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;line-height: 25.168px;font-size: 15px;color: rgb(171, 25, 66);">《Java 9模块化开发》</span><span style="font-size: 15px;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;line-height: 25.168px;">，跳票无数回之后，Java9终于支持模块化了，对这方面关心对可以看看。</span></p><p><span style="font-size: 15px;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;line-height: 25.168px;"><br></span></p><p><span style="font-size: 15px;"><span style="font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;line-height: 25.168px;color: rgb(171, 25, 66);">《响应式编程 — RxJava 高阶指南》</span>，掘金小册，连介绍里的几篇基础文章，是响应式编程不错的入门。&nbsp;</span><span style="font-size: 15px;color: rgb(0, 122, 170);"><a href="https://juejin.im/book/5a09997cf265da432002bf6a" target="_blank" rel="noopener">https://juejin.im/book/5a09997cf265da432002bf6a</a></span></p><p><br></p><p><span style="font-size: 15px;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;line-height: 25.168px;background-color: rgb(255, 255, 255);"><strong><br></strong></span></p><p><span style="font-size: 15px;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;line-height: 25.168px;"><span style="background-color: rgb(255, 255, 255);"><strong>拔草</strong></span>：《Thinking in Java》有点太旧了，而且作者思路随意，译者语言晦涩</span><span style="font-size: 15px;"><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;line-height: 25.168px;">。</span><span style="line-height: 1.6;">《Java性能优化权威指南&nbsp;》多年前的调优圣经已经旧的没谱。</span></span></p><p><br></p><p><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;background-color: rgb(255, 255, 255);"></span></p><h3 style="margin-top: 0.5em;margin-bottom: 0.5em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 1.4em;vertical-align: baseline;color: rgb(172, 30, 6);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;">5. 操作系统与网络的书</h3><p style="margin-bottom: 1em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;"><span style="color: rgb(172, 30, 6);">《Linux内核设计与实现 第3版》</span></p><p style="margin-bottom: 1em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;">业内缩写LKD。Robert Love用最薄的篇幅，顺畅的文字将Linux内核主要的算法讲清楚了，《深入理解Linux内核》之类厚厚的全是代码，不是专门的内核程序员看这本足够了。</p><p style="margin-bottom: 1em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;"><span style="color: rgb(172, 30, 6);">《性能之巅》</span></p><p style="margin-bottom: 1em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;">Brendan Gregg的书，火焰图的推广者，在Netflix专攻性能。<span style="color: rgb(17, 17, 17);font-family: Helvetica, Arial, sans-serif;font-size: 13px;line-height: 21.06px;background-color: rgb(255, 255, 255);">&nbsp;</span>操作系统的性能调优、监控、工具和方法论，看这本就够了，已经足够厚，可能是书单里最厚的一本，但值得作为一本枕头书。</p><p style="margin-bottom: 1em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;"></p><p style="margin-bottom: 1em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;"><span style="color: rgb(172, 30, 6);">《WireShark网络分析就这么简单》</span>和&nbsp;<span style="color: rgb(172, 30, 6);">《WireShark网络分析的艺术》</span></p><p style="margin-bottom: 1em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;">多少人，是看了这两本轻松又实战的书，才真正理解TCP的细节。</p><p style="margin-bottom: 1em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;"><span style="font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;color: rgb(172, 30, 6);">《深入理解计算机系统 第3版》</span></p><p style="margin-bottom: 1em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;">如果实在觉得家里没本书镇楼心里不踏实，就买这一本，也是<span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;">左耳朵耗子</span>力荐的一本。</p><p><br></p><p><strong><span style="font-size: 15px;">极客时间：</span></strong></p><p><span style="font-size: 15px;">很有现代感，互联网站涉及的内容，那些经典教科书里都没有的。</span>&lt;/p</p><p><br></p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;"><span style="font-size: 15px;"><strong><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;line-height: 25.168px;">附加：</span></strong></span><span style="color: rgb(172, 30, 6);"><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;"></span>《现代操作系统 第3版》</span>如果看LKD未尽兴，可以回头看看这本基础概念，感觉没《操作系统概念》(恐龙书)那么<span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;">枯燥</span>。</p><p style="margin-bottom: 1em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;"><span style="font-size: 15.73px;line-height: 25.168px;color: rgb(172, 30, 6);">《TCP/IP详解 卷1:协议 第2版》&nbsp;</span><span style="font-size: 15.73px;line-height: 25.168px;">这么多年过去了，TCP的书好像还是只有英年早逝的作者的这一本。后人写的第二版也出来，厚了很多。</span></p><p style="margin-bottom: 1em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;"><span style="font-size: 15px;"><strong>拔草：</strong></span>《UNIX环境高级编程》和《UNIX网络编程》，缩写为APUE和UNP，不写C的同学其实没啥用。<span style="font-size: 15.73px;line-height: 1.6;">《Unix 编程艺术》，扯的都是闲篇，厚厚的一本略读一下就行。&nbsp;</span></p><p><span style="font-size: 15px;">另外，那些日本韩国人写的《图解XXX》都不喜欢。</span></p><p style="margin-bottom: 1em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;"><br></p><h3 style="margin-top: 0.5em;margin-bottom: 0.5em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 1.4em;vertical-align: baseline;color: rgb(172, 30, 6);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;">6. 算法的书</h3><p style="margin-bottom: 1em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;"><span style="color: rgb(172, 30, 6);">《数据结构与算法分析-Java语言描述 第3版》</span><br>够薄，数据结构与算法分析的点基本都涵盖了，而且示例代码是Java写的，新出了第3版。</p><p style="margin-bottom: 1em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;"><span style="color: rgb(172, 30, 6);">《算法 第4版》</span><br>可与上一本对比着读，厚一些，也多些图，但知识点没上面的全，也是Java的。</p><p><span style="border-width: 0px;border-style: initial;border-color: initial;outline: 0px;vertical-align: baseline;"></span></p><p><br></p><p><span style="font-size: 15px;"><strong>附加：</strong>&nbsp;<span style="color: rgb(172, 30, 6);">《数学之美》</span>、<span style="color: rgb(172, 30, 6);">《编程珠玑》</span>，都是专栏文章，讲得并不系统，可以当兴趣读物来看。</span></p><p style="margin-top: 5px;"><span style="font-size: 15px;line-height: 1.6;"><strong style="line-height: 25.6px;">拔草：</strong>无比枯燥很多公式的《算法导论》，《计算机程序设计艺术》就留给特别厉害的同学去读了。</span><br></p><p><br></p><p><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;background-color: rgb(255, 255, 255);"></span></p><h3 style="margin-top: 0.5em;margin-bottom: 0.5em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 1.4em;vertical-align: baseline;color: rgb(172, 30, 6);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;">7. 程序员的自我修养</h3><p style="margin-bottom: 1em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;"><span style="color: rgb(172, 30, 6);">《程序员修炼之道-从小工到专家》</span></p><p style="margin-bottom: 1em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;">Pragmatic Programmer–注重实效的程序员系列的开山之作。</p><p style="margin-bottom: 1em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;"><span style="color: rgb(172, 30, 6);">《代码整洁之道》</span>和&nbsp;<span style="color: rgb(172, 30, 6);">《程序员的职业素养》</span></p><p style="margin-bottom: 1em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;">Robert.C Martin作品，英文名是很相近的《Clean Code》和 《Clean Coder》，应该接替《代码大全2》成为必看系列，因为后者太厚了，而且也有不少过时的东西。</p><p style="margin-bottom: 1em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;">还有一本英文版的《Clean Architecture》，不过讲的是单体应用自身的架构。</p><p style="margin-bottom: 1em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;"></p><p style="line-height: 25.6px;white-space: normal;"><span style="color: rgb(172, 30, 6);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;">《有效的单元测试》</span></p><p style="line-height: 25.6px;white-space: normal;margin-top: 10px;"><span style="font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15px;line-height: 24px;">讲代码可读性的书很多，专门教测试代码怎么写得可读的少，而事实上我们很多时间都在维护测试代码，所以推荐下。</span></p><p style="margin-bottom: 1em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;"><strong></strong></p><p style="margin-bottom: 1em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;"><span style="font-size: 15px;"><strong><br></strong></span></p><p style="margin-bottom: 1em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;"><span style="font-size: 15px;"><strong>拔草：</strong></span><span style="font-size: 15.73px;line-height: 25.168px;">《重构》很厚，但最有价值就是前面几章的洗脑篇。</span></p><p style="margin-bottom: 1em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;"><span style="font-size: 15px;">温伯格的书网上很推崇，<span style="text-decoration: none;">《成为技术领导者》</span>之类的，但我觉得年代太远，读起来其实没多大意思，一两个鸡汤观点还要自己从书里慢慢淘，有那功夫不如看点别的。</span></p><p style="margin-bottom: 1em;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 15.73px;vertical-align: baseline;color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;white-space: normal;"><br></p><h3 style="margin-top: 0.5em;margin-bottom: 0.5em;font-size: 1.4em;white-space: normal;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;vertical-align: baseline;color: rgb(172, 30, 6);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;">8. 团队的书</h3><p><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;background-color: rgb(255, 255, 255);"><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;">敏捷的书高度重复，看哪本都差不多，比如最开始那本</span><span style="font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;color: rgb(172, 30, 6);">《解析极限编程–拥抱变化》</span><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;">就行，但没得卖了。</span></span></p><p><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;background-color: rgb(255, 255, 255);"><br></span></p><p><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;background-color: rgb(255, 255, 255);">其他如</span><span style="line-height: 25.168px;font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;color: rgb(171, 25, 66);background-color: rgb(255, 255, 255);">《硝烟中的Scrum 和 XP》</span><span style="line-height: 25.168px;font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;background-color: rgb(255, 255, 255);">，</span><span style="line-height: 25.168px;font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;color: rgb(171, 25, 66);background-color: rgb(255, 255, 255);">《学习敏捷》</span><span style="line-height: 25.168px;font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;background-color: rgb(255, 255, 255);">，</span><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;background-color: rgb(255, 255, 255);"><span style="font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;color: rgb(172, 30, 6);">《敏捷开发的艺术》</span><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;">都不错。</span></span></p><p><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;line-height: 25.168px;background-color: rgb(255, 255, 255);"><br></span></p><p><br></p><p><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;background-color: rgb(255, 255, 255);"><br></span></p><p><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;background-color: rgb(255, 255, 255);">阻止大家买书的原因，一是没有地方放，二是没有时间看。好在Kindle上的书渐渐多了，解决了第一个问题。但第二个问题更难，所以我也没看完所有，但起码翻到了可以下判断的时候。</span></p><p><span style="color: rgb(68, 68, 68);font-family: 微软雅黑, Ubuntu, Arial, Helvetica, sans-serif;font-size: 15.73px;background-color: rgb(255, 255, 255);"><br></span></p><p>江南白衣的java后端书架<br><a href="https://mp.weixin.qq.com/s/-TJ8SW8gs5PIqUwKLCUfSg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/-TJ8SW8gs5PIqUwKLCUfSg</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;span style=&quot;line-height: 1.6;font-size: 15px;&quot;&gt;见书单如面。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.6;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;
      
    
    </summary>
    
      <category term="书单" scheme="http://yoursite.com/categories/%E4%B9%A6%E5%8D%95/"/>
    
    
      <category term="书单" scheme="http://yoursite.com/tags/%E4%B9%A6%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>存款准备金</title>
    <link href="http://yoursite.com/2018/11/18/%E5%AD%98%E6%AC%BE%E5%87%86%E5%A4%87%E9%87%91/"/>
    <id>http://yoursite.com/2018/11/18/存款准备金/</id>
    <published>2018-11-18T11:50:02.311Z</published>
    <updated>2018-11-18T11:49:45.768Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h2 id="存款准备金"><a href="#存款准备金" class="headerlink" title="存款准备金"></a>存款准备金</h2></blockquote><p>金融机构为保证客户提取存款和资金清算需要而准备的，在中央银行的存款。初始意义在于保证商业银行的支付和清算。</p><blockquote><h2 id="存款准备金率"><a href="#存款准备金率" class="headerlink" title="存款准备金率"></a>存款准备金率</h2></blockquote><p>中央银行要求的存款准备金占其存款总额的比例就是存款准备金率。</p><blockquote><h2 id="货币乘数"><a href="#货币乘数" class="headerlink" title="货币乘数"></a>货币乘数</h2></blockquote><p>一单位准备金所产生的货币量。</p><blockquote><h2 id="乘数效应"><a href="#乘数效应" class="headerlink" title="乘数效应"></a>乘数效应</h2></blockquote><p>中央银行的初始货币提供量与社会货币最终形成量之间存在着数倍扩张（或收缩）的效果。</p><p><strong>举例</strong><br>　　先假设最低准备金率是20%，也就是说当银行得到100元的存款时它必须留存20元，只能贷出80元。其次假设银行会放足80元。<br>　　现在有某君A往银行里存了100元，银行再将其中的80元放贷给B，如果B把贷来的80元又全部存入银行，银行再将其中的64原贷给了C，C又把64元存入银行，银行再向D贷出51.2元…依此类推，央行最先向市场投放了100元，市场上最后多的货币会是100+80+64+51.2+…</p><p>　　解这个数列的值是500，其实就是100*（1/0.2）=500</p><p>　　也就是实际的货币投放量。这里的1/0.2就是货币乘数也就是1除以法定准备金率。</p><p><strong>完整的货币（政策）乘数的计算公式是</strong>：m =（Rc+1）/(Rd+Re+Rc)。其中Rd、Re、Rc分别代表法定准备率、超额准备率和现金在存款中的比率。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h2 id=&quot;存款准备金&quot;&gt;&lt;a href=&quot;#存款准备金&quot; class=&quot;headerlink&quot; title=&quot;存款准备金&quot;&gt;&lt;/a&gt;存款准备金&lt;/h2&gt;&lt;/blockquote&gt;
&lt;p&gt;金融机构为保证客户提取存款和资金清算需要而准备的，在中央银行的
      
    
    </summary>
    
      <category term="互联网金融" scheme="http://yoursite.com/categories/%E4%BA%92%E8%81%94%E7%BD%91%E9%87%91%E8%9E%8D/"/>
    
    
      <category term="金融" scheme="http://yoursite.com/tags/%E9%87%91%E8%9E%8D/"/>
    
      <category term="存款准备金" scheme="http://yoursite.com/tags/%E5%AD%98%E6%AC%BE%E5%87%86%E5%A4%87%E9%87%91/"/>
    
      <category term="乘数效应" scheme="http://yoursite.com/tags/%E4%B9%98%E6%95%B0%E6%95%88%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>其实它懂得比你想象的多</title>
    <link href="http://yoursite.com/2018/11/17/%E5%85%B6%E5%AE%9E%E5%AE%83%E6%87%82%E5%BE%97%E6%AF%94%E4%BD%A0%E6%83%B3%E8%B1%A1%E7%9A%84%E5%A4%9A/"/>
    <id>http://yoursite.com/2018/11/17/其实它懂得比你想象的多/</id>
    <published>2018-11-17T11:58:15.536Z</published>
    <updated>2018-11-17T11:57:48.579Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h2 id="情景"><a href="#情景" class="headerlink" title="情景"></a>情景</h2></blockquote><p>　　一天，儿子在玩扭扭车。</p><p>　　妹妹兴冲冲的走过来，儿子老远就看到了，眼神中充满敌意。<br>　　妹妹还没走到跟前，儿子就迎上推了一把，把妹妹推到了。<br>　　可能是还小的缘故，妹妹并没有哭，很快爬起来了。</p><p>　　过了一会，儿子拿起妹妹的杯子准备喝水。<br>　　舅妈一把夺过了杯子，严肃的说“不要用我们的杯子喝水”。<br>　　儿子怔怔得站在那里，可怜巴巴的说“舅妈，我不打妹妹了”。</p><blockquote><h2 id="重新认识"><a href="#重新认识" class="headerlink" title="重新认识"></a>重新认识</h2></blockquote><p>　　这个时候儿子只有28个月。他讲的话，没人教过他。也没人给他暗示，舅妈不让他用妹妹的杯子是因为他推了妹妹。<br>　　一个28个月的孩子能通过舅妈的行为和表情中判断并联想出这件事情发生的原因，并主动做出和解的反应，这很让我惊讶。</p><blockquote><h2 id="改变教育方式"><a href="#改变教育方式" class="headerlink" title="改变教育方式"></a>改变教育方式</h2></blockquote><p>　　以上的情景，让我意识到，孩子的思维发育远远超出我原本的预期。所以，在教育孩子时，可以试着用成人的思考方式来处理。</p><blockquote><h2 id="发生上面的情景该如何处理？"><a href="#发生上面的情景该如何处理？" class="headerlink" title="发生上面的情景该如何处理？"></a>发生上面的情景该如何处理？</h2></blockquote><p>　　首先需要同理心，思考下孩子为何会做出这样的反应？ 重要的一点，不只需要自己思考，还需要直接从孩子那里得到答案。（不要直接告诉孩子如何做，让他自己去思考）</p><p>　　问孩子：为什么打妹妹呢？<br>　　答：妹妹会打我，抢我的玩具，我不喜欢妹妹。（妹妹只有15个月，处于感官发育期，经常用手拍人或者物）<br>　　问：哦，是因为妹妹经常拍你，抢你玩具你才会推她是吗？<br>　　答：是的。<br>　　问：妹妹是怎么打你得呢：<br>　　答：她这样打我。（做出手拍的样子）<br>　　问：妹妹这样拍你很疼吧？<br>　　答：是的。<br>　　告诉孩子：我知道了，妹妹经常这样拍你，拍得你很疼。其实啊，妹妹这是喜欢你，想跟你玩，她还不会控制摸你得力量，所以啊，她摸你得时候用的力气太大。（仅这样还不够，即使他知道了原因，他也不想挨打啊。因为孩子太小了，他怕被打怕玩具被抢，只会提前预防，除此之外他不知道该怎么应对。只能直接告诉他如何应对。）以后妹妹要拍你得时候，你就告诉妹妹，轻轻的啊，不能打我，不然我就打你喽。（因为妹妹太小，其实这样还是很难阻止事情的发生的，父母得好好盯着）<br>　　答：恩。<br>　　告诉孩子第二件事：妹妹一定是觉得你得玩具很好玩，她也想玩玩，我们跟她一起玩，她的玩具我们也一起玩，这样怎么样？<br>　　<strong>（上面的这两件事在平时要不断的重复告诉他）</strong><br>　　答：好的，我跟她一起玩。<br>　　<br>除此之外，平时需要必不可少的训练。在家里模拟妹妹拍他、抢玩具的情景，教他如何应变，不断的训练。（孩子的任何经历都可以在家里训练它的应变能力）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h2 id=&quot;情景&quot;&gt;&lt;a href=&quot;#情景&quot; class=&quot;headerlink&quot; title=&quot;情景&quot;&gt;&lt;/a&gt;情景&lt;/h2&gt;&lt;/blockquote&gt;
&lt;p&gt;　　一天，儿子在玩扭扭车。&lt;/p&gt;
&lt;p&gt;　　妹妹兴冲冲的走过来，儿子老远就看到了，眼
      
    
    </summary>
    
      <category term="教育" scheme="http://yoursite.com/categories/%E6%95%99%E8%82%B2/"/>
    
    
      <category term="教育" scheme="http://yoursite.com/tags/%E6%95%99%E8%82%B2/"/>
    
  </entry>
  
  <entry>
    <title>上海证交所云计算解决方案</title>
    <link href="http://yoursite.com/2018/11/17/%E4%B8%8A%E6%B5%B7%E8%AF%81%E4%BA%A4%E6%89%80%E4%BA%91%E8%AE%A1%E7%AE%97%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://yoursite.com/2018/11/17/上海证交所云计算解决方案/</id>
    <published>2018-11-17T07:30:07.254Z</published>
    <updated>2018-11-17T07:27:53.986Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/PdkURUS.png" alt=""></p><p><img src="https://i.imgur.com/Eutdqgc.png" alt=""></p><p><img src="https://i.imgur.com/XhDO5lk.png" alt=""></p><p><img src="https://i.imgur.com/vo6so0f.png" alt=""></p><p><img src="https://i.imgur.com/zunKjNl.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://i.imgur.com/PdkURUS.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/Eutdqgc.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.i
      
    
    </summary>
    
      <category term="互联网金融" scheme="http://yoursite.com/categories/%E4%BA%92%E8%81%94%E7%BD%91%E9%87%91%E8%9E%8D/"/>
    
    
      <category term="金融" scheme="http://yoursite.com/tags/%E9%87%91%E8%9E%8D/"/>
    
      <category term="云计算" scheme="http://yoursite.com/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
      <category term="合规体系" scheme="http://yoursite.com/tags/%E5%90%88%E8%A7%84%E4%BD%93%E7%B3%BB/"/>
    
  </entry>
  
  <entry>
    <title>精益看板</title>
    <link href="http://yoursite.com/2018/11/17/%E7%B2%BE%E7%9B%8A%E7%9C%8B%E6%9D%BF/"/>
    <id>http://yoursite.com/2018/11/17/精益看板/</id>
    <published>2018-11-17T01:05:52.502Z</published>
    <updated>2018-11-17T15:09:54.663Z</updated>
    
    <content type="html"><![CDATA[<h2 id="精益看板在软件方面的八大实践"><a href="#精益看板在软件方面的八大实践" class="headerlink" title="精益看板在软件方面的八大实践"></a>精益看板在软件方面的八大实践</h2><blockquote><h3 id="建立看板"><a href="#建立看板" class="headerlink" title="建立看板"></a>建立看板</h3></blockquote><ol><li>价值流映射：对研发整体流程进行价值流映射，分析典型业务流效率。</li><li>分析请求分配产能：对不同工作项类型，分析价值流请求量并分配产能（划分泳道）。</li><li>显式化流转规则：显式化每个活动上下游流转规则及时发现问题，质量可控。</li><li>限制在制品：限制并行任务数，让任务流动更快，缩短开发周期。</li></ol><blockquote><h3 id="运作看板"><a href="#运作看板" class="headerlink" title="运作看板"></a>运作看板</h3></blockquote><ol><li>消除瓶颈：通过提升瓶颈处的处理能力，从而提升项目的吞吐量。</li><li>加速流动：通过监控流动中的异常状态，及时处理等待和阻塞，加速流动提升吞吐量。</li><li>改进价值流：通过数据驱动的回顾消除浪费，持续不断的改进价值流，提升吞吐量。</li><li>拉动式开发：通过拉动机制平衡开发资源和请求，保证价值持续稳定的流动。</li></ol><hr><h2 id="精益看板开源及收费软件"><a href="#精益看板开源及收费软件" class="headerlink" title="精益看板开源及收费软件"></a>精益看板开源及收费软件</h2><blockquote><p><a href="https://business901.com/blog1/lean-kanban-lessons-from-a-software-developer/" target="_blank" rel="noopener">https://business901.com/blog1/lean-kanban-lessons-from-a-software-developer/</a><br><a href="https://www.leangoo.com/" target="_blank" rel="noopener">https://www.leangoo.com/</a><br><a href="https://www.agilealliance.org/what-is-scrumban/" target="_blank" rel="noopener">https://www.agilealliance.org/what-is-scrumban/</a><br><a href="https://www.teambition.com/agile?utm_source=sitesolution&amp;utm_term=agile+development&amp;utm_campaign=template" target="_blank" rel="noopener">https://www.teambition.com/agile?utm_source=sitesolution&amp;utm_term=agile+development&amp;utm_campaign=template</a><br><a href="https://kanbantool.com/product" target="_blank" rel="noopener">https://kanbantool.com/product</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;精益看板在软件方面的八大实践&quot;&gt;&lt;a href=&quot;#精益看板在软件方面的八大实践&quot; class=&quot;headerlink&quot; title=&quot;精益看板在软件方面的八大实践&quot;&gt;&lt;/a&gt;精益看板在软件方面的八大实践&lt;/h2&gt;&lt;blockquote&gt;
&lt;h3 id=&quot;建立看板
      
    
    </summary>
    
      <category term="敏捷" scheme="http://yoursite.com/categories/%E6%95%8F%E6%8D%B7/"/>
    
    
      <category term="精益看板" scheme="http://yoursite.com/tags/%E7%B2%BE%E7%9B%8A%E7%9C%8B%E6%9D%BF/"/>
    
      <category term="敏捷" scheme="http://yoursite.com/tags/%E6%95%8F%E6%8D%B7/"/>
    
      <category term="scrum" scheme="http://yoursite.com/tags/scrum/"/>
    
  </entry>
  
  <entry>
    <title>六顶思考帽</title>
    <link href="http://yoursite.com/2018/11/16/%E5%85%AD%E9%A1%B6%E6%80%9D%E8%80%83%E5%B8%BD/"/>
    <id>http://yoursite.com/2018/11/16/六顶思考帽/</id>
    <published>2018-11-16T15:51:24.174Z</published>
    <updated>2018-11-18T11:56:28.172Z</updated>
    
    <content type="html"><![CDATA[<p><strong>部分内容</strong></p><p><img src="https://i.imgur.com/lvjbOm0.png" alt=""></p><p><img src="https://i.imgur.com/eDi0uJo.png" alt=""></p><p><img src="https://i.imgur.com/s5gpOc5.png" alt=""></p><p><img src="https://i.imgur.com/7BxQzhj.png" alt=""></p><div class="row">    <embed src="/images/六顶思考帽.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;部分内容&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/lvjbOm0.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/eDi0uJo.png&quot; alt=&quot;&quot;&gt;
      
    
    </summary>
    
      <category term="思维方法" scheme="http://yoursite.com/categories/%E6%80%9D%E7%BB%B4%E6%96%B9%E6%B3%95/"/>
    
    
      <category term="思维" scheme="http://yoursite.com/tags/%E6%80%9D%E7%BB%B4/"/>
    
      <category term="思考方法" scheme="http://yoursite.com/tags/%E6%80%9D%E8%80%83%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>如何修改用户的SHELL参数</title>
    <link href="http://yoursite.com/2018/11/11/%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9%E7%94%A8%E6%88%B7%E7%9A%84SHELL%E5%8F%82%E6%95%B0/"/>
    <id>http://yoursite.com/2018/11/11/如何修改用户的SHELL参数/</id>
    <published>2018-11-11T09:30:22.106Z</published>
    <updated>2018-11-11T09:29:57.816Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1.查看可用shell</strong><br>cat /etc/shells</p><p><strong>2.假设指定test用户的shell为可用的/bin/sh</strong><br>chsh -s /bin/sh test</p><p><strong>3.在用户下查看 env即可查看到当前shell</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;1.查看可用shell&lt;/strong&gt;&lt;br&gt;cat /etc/shells&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.假设指定test用户的shell为可用的/bin/sh&lt;/strong&gt;&lt;br&gt;chsh -s /bin/sh test&lt;/p&gt;
&lt;p&gt;&lt;str
      
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>取模与取余的区别</title>
    <link href="http://yoursite.com/2018/11/11/%E5%8F%96%E6%A8%A1%E4%B8%8E%E5%8F%96%E4%BD%99%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://yoursite.com/2018/11/11/取模与取余的区别/</id>
    <published>2018-11-11T09:30:22.105Z</published>
    <updated>2018-11-11T09:28:20.339Z</updated>
    
    <content type="html"><![CDATA[<p>对于整型数a，b来说，取模运算或者求余运算的方法都是：</p><p>1.求 整数商： c = a/b;</p><p>2.计算模或者余数： r = a - c*b.</p><p>求模运算和求余运算在第一步不同: 取余运算在取c的值时，向0 方向舍入(fix()函数)；而取模运算在计算c的值时，向负无穷方向舍入(floor()函数)。</p><p>例如：计算-7 Mod 4</p><p>那么：a = -7；b = 4；</p><p>第一步：求整数商c，如进行求模运算c = -2（向负无穷方向舍入），求余c = -1（向0方向舍入）；</p><p>第二步：计算模和余数的公式相同，但因c的值不同，求模时r = 1，求余时r = -3。</p><p>归纳：当a和b符号一致时，求模运算和求余运算所得的c的值一致，因此结果一致。</p><p>当符号不一致时，结果不一样。求模运算结果的符号和b一致，求余运算结果的符号和a一致。</p><p>另外各个环境下%运算符的含义不同，比如c/c++，java 为取余，而python则为取模。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;对于整型数a，b来说，取模运算或者求余运算的方法都是：&lt;/p&gt;
&lt;p&gt;1.求 整数商： c = a/b;&lt;/p&gt;
&lt;p&gt;2.计算模或者余数： r = a - c*b.&lt;/p&gt;
&lt;p&gt;求模运算和求余运算在第一步不同: 取余运算在取c的值时，向0 方向舍入(fix()函数)；而
      
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>linux查看端口被哪个程序占用</title>
    <link href="http://yoursite.com/2018/11/11/linux%E6%9F%A5%E7%9C%8B%E7%AB%AF%E5%8F%A3%E8%A2%AB%E5%93%AA%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%8D%A0%E7%94%A8/"/>
    <id>http://yoursite.com/2018/11/11/linux查看端口被哪个程序占用/</id>
    <published>2018-11-11T09:27:26.151Z</published>
    <updated>2018-11-11T09:27:18.596Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-查看端口被哪个程序占用"><a href="#1-查看端口被哪个程序占用" class="headerlink" title="1.查看端口被哪个程序占用"></a>1.查看端口被哪个程序占用</h1><p>1.&gt;netstat -apn|grep [port]</p><p>2.&gt;  ll /proc/[pid]/   或者用 ps -aux | grep [pid]</p><h1 id="2-查看某个应用程序的进程详情"><a href="#2-查看某个应用程序的进程详情" class="headerlink" title="2. 查看某个应用程序的进程详情"></a>2. 查看某个应用程序的进程详情</h1><p>ps -aux | grep /home/tomcat/cartV1/vmall/</p><h1 id="3-查看某个进程占用了哪个端口"><a href="#3-查看某个进程占用了哪个端口" class="headerlink" title="3.查看某个进程占用了哪个端口"></a>3.查看某个进程占用了哪个端口</h1><p>netstat -nltp|grep pid</p><p>﻿﻿</p><p>﻿﻿</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-查看端口被哪个程序占用&quot;&gt;&lt;a href=&quot;#1-查看端口被哪个程序占用&quot; class=&quot;headerlink&quot; title=&quot;1.查看端口被哪个程序占用&quot;&gt;&lt;/a&gt;1.查看端口被哪个程序占用&lt;/h1&gt;&lt;p&gt;1.&amp;gt;netstat -apn|grep [p
      
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
      <category term="linux命令" scheme="http://yoursite.com/tags/linux%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>MySQL索引和约束</title>
    <link href="http://yoursite.com/2018/11/11/MySQL%E7%B4%A2%E5%BC%95%E5%92%8C%E7%BA%A6%E6%9D%9F/"/>
    <id>http://yoursite.com/2018/11/11/MySQL索引和约束/</id>
    <published>2018-11-11T09:24:32.795Z</published>
    <updated>2018-11-11T09:20:09.073Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-索引分类"><a href="#1-索引分类" class="headerlink" title="1 索引分类"></a>1 索引分类</h1><p>按照字段个数分：单列索引、组合索引<br>按照唯一性划分：普通索引、唯一索引<br>MyISAM特殊索引：全文索引和空间索引</p><h1 id="2-唯一性约束"><a href="#2-唯一性约束" class="headerlink" title="2 唯一性约束"></a>2 唯一性约束</h1><p>主键：一个表只能存在一个，且不允许空值  PRIMARY KEY&lt;字段名1,字段名2,…&gt;<br>唯一性约束：允许列上存在一个空值   UNIQUE&lt;字段名1,字段名2,…&gt;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-索引分类&quot;&gt;&lt;a href=&quot;#1-索引分类&quot; class=&quot;headerlink&quot; title=&quot;1 索引分类&quot;&gt;&lt;/a&gt;1 索引分类&lt;/h1&gt;&lt;p&gt;按照字段个数分：单列索引、组合索引&lt;br&gt;按照唯一性划分：普通索引、唯一索引&lt;br&gt;MyISAM特殊索引：全
      
    
    </summary>
    
      <category term="mysql" scheme="http://yoursite.com/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>能力提升知识体系</title>
    <link href="http://yoursite.com/2018/11/05/%E8%83%BD%E5%8A%9B%E6%8F%90%E5%8D%87%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/"/>
    <id>http://yoursite.com/2018/11/05/能力提升知识体系/</id>
    <published>2018-11-04T23:45:13.439Z</published>
    <updated>2018-11-18T12:00:12.222Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/N5qIu9D.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://i.imgur.com/N5qIu9D.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="其他" scheme="http://yoursite.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="书单" scheme="http://yoursite.com/tags/%E4%B9%A6%E5%8D%95/"/>
    
      <category term="能力提升" scheme="http://yoursite.com/tags/%E8%83%BD%E5%8A%9B%E6%8F%90%E5%8D%87/"/>
    
  </entry>
  
  <entry>
    <title>子女教育问题</title>
    <link href="http://yoursite.com/2018/11/04/%E5%AD%A9%E5%AD%90%E6%95%99%E8%82%B2%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/11/04/孩子教育问题/</id>
    <published>2018-11-04T15:58:58.731Z</published>
    <updated>2018-11-04T16:09:24.855Z</updated>
    
    <content type="html"><![CDATA[<p>　　现在社会充斥着无处不在的压力与竞争，知识层次越高，往往面临的压力也越大。曾参加过一个培训机构的压力测试，测试的对象一个是汽车制造厂的蓝领工人群体，另一个国内某世界500强的民营高科技公司的白领群体，测试的结果令人意外，蓝领工人的压力普遍更小，而知识层次和收入较高的白领群体的压力普遍高很多。面对巨大的职场压力，白领群体往往在工作上付出的时间相对更多，加班成为工作的常态。即使在下班时间也会消耗大量的时间在工作上，还要持续加强自身的学习。然而，我们都面临着一个无法回避的问题：子女教育。</p><p>　　总结一下，孩子的教育归为两类：1）人格修养教育；2）思维、技能培养。</p><p>　　<strong>人格修养教育</strong>是父母必须要做到的部分，孩子的人格养成和修养的提升往往来源于父母的言传身教，在孩子形成是非判断能力前，身教往往更有效。孩子身上往往会反映出父母的一些行为习惯，这就是问题的家族性遗传。如果孩子性格暴躁，那么一方面是天生的性格特点，而最有可能的是因为父母一方性格比较暴躁，孩子很快就会学会。不信你可以观察下，大部分孩子的言行举止都会与父母神似。作为父母，我们必须先做好榜样，才能教会孩子。</p><p>　　<strong>思维、技能培养</strong>可以由父母以外的更专业的角色来承担，比如培训机构、学校，并不需要父母的言传身教。但是现在培训机构或者学校为了保证效果会给父母留各种的作业和任务，要求家长帮助孩子完成，这无形中增加了父母的负担。我的观点是如果你的精力不足，那么重点培养孩子的思维能力，适当挖掘孩子的兴趣，技能的教育不可缺少但是优先级最低。</p><p>　　这两类，无论哪一类，都需要父母花费大量时间。孩子的教育其实拼的是父母。孩子往往是在父母的基础上成长起来的，你的水平决定了你孩子的起始水平。你是否想过你的业余时间有多少？每天花费在孩子身上的时间有多少？每周有多少？跟孩子一起时都做些什么？你是如何教育孩子的？</p><p>　　如果父母双方都在职场，时间紧张，那么合理规划自己的业余时间以保证在孩子教育上的投入是很有必要的。</p><p>　　<strong>我的建议</strong>是家务的事情，能外包的就不要自己做。洗衣、做饭、清洁这些工作完全可以交给他人去做，把时间省下来，用在孩子身上。<br>　　父母需要多读一些教育方面的书籍，提升自我修养，学会帮助孩子树立正确的人生观和价值观。<br>　　与孩子在一起时，要保证质量和效果，多与孩子做深层次的交流与互动，培养孩子高尚的品格，挖掘孩子的兴趣。<br>　　技能的培养交给专业的机构，花费少量的时间做孩子的辅导。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;　　现在社会充斥着无处不在的压力与竞争，知识层次越高，往往面临的压力也越大。曾参加过一个培训机构的压力测试，测试的对象一个是汽车制造厂的蓝领工人群体，另一个国内某世界500强的民营高科技公司的白领群体，测试的结果令人意外，蓝领工人的压力普遍更小，而知识层次和收入较高的白领群
      
    
    </summary>
    
      <category term="教育" scheme="http://yoursite.com/categories/%E6%95%99%E8%82%B2/"/>
    
    
      <category term="教育，时间管理" scheme="http://yoursite.com/tags/%E6%95%99%E8%82%B2%EF%BC%8C%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>一个离职华为员工的十年感悟（转）</title>
    <link href="http://yoursite.com/2018/11/03/%E4%B8%80%E4%B8%AA%E7%A6%BB%E8%81%8C%E5%8D%8E%E4%B8%BA%E5%91%98%E5%B7%A5%E7%9A%84%E5%8D%81%E5%B9%B4%E6%84%9F%E6%82%9F/"/>
    <id>http://yoursite.com/2018/11/03/一个离职华为员工的十年感悟/</id>
    <published>2018-11-03T11:22:13.447Z</published>
    <updated>2018-11-04T16:10:17.309Z</updated>
    
    <content type="html"><![CDATA[<p>一毕业就加入公司，做过研发、一线，到今年已经是第十年（九年两个月）了；做人得感恩，首先必须要感谢公司，在公司遇到LP，有了娃，帝都买了房（有贷款）。</p><p>结合心声大家经常讨论的问题，以下有一点小收获，非经历贴非炫耀贴，分享给后来人，希望对困惑的人有所帮助；对或不对、听或不听，自行判断；觉得错的不用喷了，本周五就截止了，有问题可以留言，我尽量答复。</p><p><strong>第一点，人和人区别就是思维，不断更新的思维体系；人可以累，但不能停止思考。</strong></p><p>很多人最大的恐慌估计就是明知自己在打杂，又不敢或不能出去，担心出去没有竞争力。其实，这部分同学，大多数只停留在想一想的阶段，还没有到思考的阶段，没有到体系的阶段；竞争力，我的总结是工作经历+不断进步的思维体系，还有你的圈子；你会发现，每层领导都比下级领导牛，区别就是经验和思维逻辑。平时不要只抱怨，也要多思考，多学习，不断的更新自己；挑战别人容易，自己积累很难；如果一段时间，感觉自己一直很牛或者自己没有提升的输入/输出，那真的好好反思自己了，思维体系是顶层，是所有的基础，人可以累，不能停止思考，这就是哲学的本质。</p><p><strong>第二，身体是革命的本钱。</strong></p><p>公司导向是艰苦奋斗，身边一些兄弟真可以说是糟蹋自己的身体，来表现奋斗；如果能拼上去（至少19以上）还值得，不然病了没人管你；身边一个哥们得了很严重的病，后来公司也没管，离职了。</p><p>男人身体有两个关键时间点一定要注意：第一个是35岁，男人体质下降转折点；第二个是45岁，心血管疾病发生率高发期，经常喝酒熬夜的需要注意。</p><p>你没了，你这一辈子可能是在给你的司机打工（那天看到的一个新闻）。</p><p>建议平时多跑步（注意保暖，保护膝盖）、游泳，做些无氧增加肌肉，家里也行，哑铃、跳绳、卷腹、平板支撑等等，不要说自己累没有时间等，没有人不累，不是非要跑10公里才叫运动，只要你想明白了，你就会知道怎么做。</p><p><strong>第三，家庭是根基，家都是温暖的港湾和动力源泉</strong></p><p>人的爆发来自于安全感，家是安全感的重要来源，要懂得经营，家庭会给你很多的动力；不要动不动就吵架、离婚，离婚对家庭、孩子没有赢家，人品底线出了问题除外。</p><p>心声有同事说她老公天天打游戏，一个大人怎么能这样呢？？这种情况属于你老公不知道如何处理自己困境，迷茫，他也不是故意的。</p><p>很多人“不思进取”其根因，他的父母只停留在“好好学习”的层次，父母没有教给他正确的教育，他不知所措；那么，你就要思考了，你提升了吗？作为你的人生另一半，你该如何帮忙他提升呢？如何让你的孩子不走老路呢？</p><p>分享一个经验，人天生就不爱听别人否定自己，请要不整天JJYY只会增加他的反感，人本能容易接受第三方的经验。</p><p>可以偶尔游戏、电影、运动、喝酒释放自己，但要养成看书/听书，多与人交流，每个人都有比自己强的地方，看书和与人交流是一种很好的方式，把这个习惯带给你的家人和孩子。如果你的圈子就只有喝酒，只能说明你的圈子很低。</p><p><strong>第四，没有不懂事的孩子，只有不学习的家长；教育拼的是家长不是孩子，本质就是你和他一起提升；不要说等我挣完钱了抽时间在管他。</strong></p><p>最近天涯曝光很多渣男，一个男人身体偶尔偏航，精神可以偶尔出轨，但人品一定不能；而，身边很多人对孩子可以说没有教育可言，你有没有想过，二十年后你的娃可能也会上天涯？想想这是多么可怕的事情；说实话，一方面公司太商业没有道德和精神，另一方面，是自己的父母从小没有给予我们正确的教育体系；那么，要么是我们自己努力改变自己形成教育传递给下一代，要么把碰壁的机会留给你的娃，选择后者，可以说是自私，等你老了你的娃内心里一定会责怪你的。</p><p>教育不是数理化，不是学习成绩；内核是心理学，孩子未来与人合作，自我更新处理能力；中间，品味、仪表姿态、财商；最后才是技能。内核和中间层出了问题，技能能好吗？或者光有学习成绩就够了吗？</p><p>心声有说，我孩子天天打游戏求破？破什么，你平时在家看手机不？打游戏不？你都做不到，怎么要求一个孩子呢？为了孩子的学习，你有没有学习教育方面的书籍和交流？</p><p><strong>第五，要不要在公司干下去？每天你都要思考，公司不是家，你学到了什么，你未来如何规划。</strong></p><p>多出去看看，你会发展现在的公司是个非常好的平台，但对于个人是不是最好的，你要分析；如果你的能力很强、逻辑思维和口才好、懂得和领导拉关系，机会得当，能拼到20以上，建议你好好拼搏一把。高管的待遇和境界是值得你付出的。</p><p>现在公司已经过了爆发期，到了和平发展期，个人迸发机会真的越来越少；如果你不是最牛X的那波人，必须面对现实，多思考，公司毕竟还是逃不开通信设备的圈子，这个圈子很小，都被公司给打的差不多了，没有了磨盘的市场，杀了驴，你又能如何？</p><p>在公司各个岗位的待遇，在其他小公司都是小主管的待遇，你出去之后很容易形成落差；公司是个庞大的组织，虚职一堆，有竞争力的岗位有多少，对于公司你只是一个螺丝钉，胶片可以写一年两年，写到45岁你还剩什么？</p><p>千万别想着到45岁财务自由，再降低工资找个公司，一样工资，谁不喜欢年轻力壮的，那个时候想创业，想想你的身体和思维还活跃吗？</p><p>社会变化这么快，那个时候你的几套房子能够抗风险的吗？？</p><p>其实，搞个兼职或创业，也是个不错的选择；不要偏激的以为创业就是互联网，传统行业也是个不错的选择，很多传统行业利润都很好，只是你不在圈子里，可以现在不做，但一定要想，万一机会来了呢？</p><p><strong>第六，在公司干多久对自己有利？</strong></p><p>即使工作中有很多不爽，你要相信华为走到今天一定有他过人的地方，一定是比外面简单一些的，不要太过批评；公司的管理和流程是公司发展的根本，技术本身就是为了管理服务的，这也是外面很多公司都想学习，那么这个也可能是你的资本，请静下心来多思考，你能带走哪些？</p><p>在一个公司，时间不要太短，建议3年左右；还是要有些积累，出去好和下一家谈；平时有有时间网上发简历，看看自己到底值多少钱，想好惯例前，至少3个月认真找下一家；5年也是一个比较好的时间点；35岁，是男人职业关键期，也是很多大厂商很多岗位招聘的限制年龄；过了这个工龄，出来竞争力同比下降了。</p><p><strong>第七，研发要不要转一线？</strong></p><p>你无非想问这几个问题：</p><p>关于一线岗位的选择，有情商可做客户经理，待遇最好，可以积累圈子，这是完全不同的路线，这相当于脱离了技术，想好，不是谁都适合；产品经理，事情多而杂；想轻松调养身体，选渠道经理；服务经理相对压力小，竞争力也少一些；</p><p>累不累？首先，在公司主力部门（非平台），就没有几个轻松的岗位；研发是持续的累，一线是有节奏的累，忙的时候经常通宵，没有周末，不忙的时候可以有周末，平时工作时有走路和抬头的时间，可以接触一些人；</p><p>然后，哪个更挣钱？正常情况是要向一线倾斜的，但目前公司业绩不好，没有了403项目奖金，都差不多；</p><p>最后，岗位区别；大部分研发出来选择产品经理的居多；两个岗位相同点打杂事情都不少；研发偏封闭，一线较开放；研发有团队的概念，领导就坐你屁股后面，一线你和领导天天各种跑；研发偏执行，一线需要独立思考，需要一些情商；有些人在研发干的特别好的，到市场都熄火了；反而有一些在研发混不下去的，到一线如鱼得水，他们头脑更灵活，更懂得投“机”，懂得如何找到领导为核心，而不是公司的利益。一线可能涉及到换地方，充分沟通，后方要稳。</p><p>一线没有回头路，大部分都出去了，可以回到研发和市场的中间，很难回到纯研发岗。出来后，从公司出来，大部分只能做你现在的这个岗位了。想好了再出来。所有的路，没有对错，必须是你自己拍板，不能把决策权留给别人。</p><p><strong>第八，工作多长时间从研发转一线合适？</strong></p><p>个人建议2-3年，不要超过5年；研发和市场是两种工作方式，或者从某种意义上说是相反的方式；人的惯性思维、岗位经验一旦形成，时间越长，越难适应新岗位；而且，工龄长了，对新岗位不是好事。要想升职，多轮换几个办事处；</p><p>关于海外，现在真的过了当年暴发户的年代了，现在没有太好的地方，出去很难回来，除非你有人，所以你一定要多培养领导资源。现在很多海外开始裁员了，有的裁员50%，公司日子越来越难。</p><p><strong>第九，公司有一种累，叫虐心</strong></p><p>“白天吵架、晚上加班干活”，这是一个离职师姐的总结，很形象；</p><p>原因就是公司给了每个部门和岗位的压力，平衡制约，而各个岗位为了体现自己的价值，拼命的找事，产生了内耗，现在公司内耗很严重，很多事情，从我看对公司价值不大，但对个人来讲非常虐心，这是最催人老的地方，公司经常看到一头白发的小伙子，脾气暴躁、脸色很差的女汉子，这种老，不是花几千做个美容买个豪华化妆品能弥补的；有些部位老了，再也回不去了；虐心容易激发癌症，推荐大家看看近藤诚的书，我正在看。</p><p><strong>第十，家庭生活如何和谐？</strong></p><p>看很多员工经常发离婚、吵架，挺着急；作为过来人，我也经历过吵架到现在的和睦；分享几点经验；</p><p>1、一定要多思考，多学习，多进步！你夫妻关系紧张一定是你不够进步，一定是，不要把责任仍给对方。</p><p>2、夫妻吵架也是正常的，夫妻都要经过互相爱慕，然后幻灭，最后内省的过程；这是有心理学依据的，要多看书，推荐《亲密关系》等书籍；</p><p>3、不要害怕吵架，生活需要掐架，需要波澜；任何的谈判都是基于竞争的，历史上很多谈判都是一边打仗一边谈，最终打服了才有了谈的资本，然后适当让一下；这就是谈判。</p><p>4、吵架要有底线，借用《正面管教》的一句话，温柔而坚定；不要动手，不要骂人，简单说要有人品；越近的人，感情伤了，很难恢复；个人的修为要提升。</p><p>5、最好的方法，你先进步了，同时让你的另一半也进步，这才是真谛。</p><p>6、只要ta不出原则性问题，你要相信还是原配好。即使是渣男，也有你的过错，人性都有灰暗的一念，肯定有你的小错，你压制了别人，别人就会反弹你；你太迁就了别人，就激发了他的阴暗面；你有没有关注过他的心里真正在想什么？他的儿时有什么经历？平时的你提高了没有？你如何帮忙他成长呢？还是只有掐。</p><p>7、家里矛盾包括社会矛盾，说通俗一点，人有时候都是嘴贱，不占便宜死不休；每天都需要别人说点好的，抬高自己，错都是别人的；老婆觉得我嫁到你们家，你们应该供着；老公觉得，我们老家老婆就应该天天被骂，这是传统；两个内心反差，加上儿时缺乏良好的沟通教育，这生活能好吗？如果确实水火不容，就让老人回去，自己体会到了辛苦，在让他们过来；人不能觉得别人天生都是欠自己的。</p><p><strong>最后，写给我心中的公司，伟大但仍然风险重重。</strong></p><p>公司领导也看不到，就算写给自己的第一个十年吧；三个方面：</p><p><strong>1、战略惰性</strong>：首先要说，LB确实很牛X，一直保持高度的自我革新，膜拜的偶像，我在公司学到了很多，感激；但我想说，LB年龄大了，缺少接班人这是最让人痛心地方；LB的理解力和专制，在公司刚起步阶段和腾飞阶段，快速聚集主航道，以客户为中心艰苦奋斗，打跑了很多不能干脏活累活的外国人，获得成功；但从近十年发展看，公司一直在吃运营商的老底子，战略上惰性了，丢掉了很多机会（比如云的趋势、视频的趋势，造就了多少个百亿的企业），在很多的机会面前畏首畏尾（短期看不到钱的），又成了别人眼中当年的外国人，真是轮回；</p><p>现在的手机有核心竞争力吗（CPU算是国产的情怀吧）？我们用运营商的人力和薪资体系，套上消费者BG上，和国内OV打，没有优势可言，又没有苹果的高度；同样，除了品质，企业网有什么竞争力吗？运营商是块状大蛋糕，企业网是小远散点，客户需要培育，不可能快速形成规模，人均效益和运营商没法比，自给自足很困难，很难更新，大的方向上失去了视频的大趋势，卡在云的趋势中，关键部件都不是自己的，在给三星和intel打工，未来在哪里；搞了个2012探索新领域，现在还没看到冰山；企鹅厂兼并小公司，虽然口碑不好，但确实发挥了大公司耍流氓的最高境界，保持非常敏感的嗅觉，不断的更新自己，不被别人革命掉；现在公司的情况真的不乐观，未来的路很长，在外面遥祝公司百年长青。</p><p><strong>2、缺少精神文明建设</strong>：目前的公司，就是改革开放的中国，一只手发展经济，丢了精神建设；在经济红利区，只要给钱随便骂，当你和平发展时期怎么办？部门独立核算，强考评，让很多员工养成了非常“势利”的习惯，和自己考评相关的，领导在场的，所有功劳都往自己身上晒，今天踢这个一脚踢那个一脚，晒存在感；领导不在场，和自己考评不强相关的，你以为你是谁啊？一个国家没有国家荣誉感、集体主义精神，人民没有信仰很可怕，一个企业同样也需要。但不是说大家每天空谈精神，不要物质。</p><p><strong>3、人力资源的懈怠</strong>：人力资源对公司很重要，公司成长过程中人力逼研发和市场前行，但忽视对人力资源的变革，没人管；现在人力资源的薪资已经是研发市场最羡慕的岗位，而且从不招聘，没有点关系进不去，已经成了温柔乡了；人力属于上游部门，这是非常可怕的；新形势下，人力和组织如何布局？今年突然说离职率低裁员，不应该是今天LB说离职率低，才被动反应；公司的懈怠、管理层的错综关系，责任首先是领导和上游部门，首先应该动金字塔尖，而不是下面的根基，裁几个基层员工能解决公司前进的问题吗？这些都是没有对人力资源产生很好的牵引和抑制的体现；内部关系也很复杂，主管一言堂，看一个17B多么大的势力。大家经常诟病的问题，内耗、胶片文化、无效加班、组织臃肿、一言堂等，根深蒂固，很难改变，慢慢来吧；</p><p>昨天看了一本书《爸爸军团》推荐给大家，假如你被宣布得了癌症，躺在床上，闭上眼睛，想想你会有什么遗憾？孩子的教育？自己的身体？家庭关系？照顾父母？等等，那么现在还等什么呢，不要让自己老的时候才去后悔。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一毕业就加入公司，做过研发、一线，到今年已经是第十年（九年两个月）了；做人得感恩，首先必须要感谢公司，在公司遇到LP，有了娃，帝都买了房（有贷款）。&lt;/p&gt;
&lt;p&gt;结合心声大家经常讨论的问题，以下有一点小收获，非经历贴非炫耀贴，分享给后来人，希望对困惑的人有所帮助；对或不对
      
    
    </summary>
    
      <category term="人生经验" scheme="http://yoursite.com/categories/%E4%BA%BA%E7%94%9F%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="人生，感悟" scheme="http://yoursite.com/tags/%E4%BA%BA%E7%94%9F%EF%BC%8C%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
</feed>
